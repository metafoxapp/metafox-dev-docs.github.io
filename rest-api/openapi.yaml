openapi: 3.0.3
info:
  title: 'MetaFox APIs'
  description: "Version: v5.1.13\nUpdated: Aug 02, 2024"
  version: 1.0.0
servers:
  -
    url: 'http://localhost/api/v1'
paths:
  '/api/{ver}/activitypoint/conversion-request':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: ''
                  example: nihil
                from_date:
                  type: string
                  description: ''
                  example: aspernatur
                to_date:
                  type: string
                  description: ''
                  example: animi
                limit:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 100.'
                  example: 16
                id:
                  type: integer
                  description: ''
                  example: 5
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: harum
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/conversion-request/{id}':
    get:
      summary: ''
      operationId: getApiVerActivitypointConversionRequestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the conversion request.'
        example: '9405634'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/conversion-request/{id}/cancel':
    patch:
      summary: ''
      operationId: patchApiVerActivitypointConversionRequestIdCancel
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Activity Point'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the conversion request.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: query
          name: q
          description: 'search text'
          example: fuga
          required: false
          schema:
            type: string
            description: 'search text'
            example: fuga
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aut
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_viewed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 63
                limit:
                  type: integer
                  description: ''
                  example: 11
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package-transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: facere
                status:
                  type: string
                  description: ''
                  example: autem
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:38'
                to:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:38'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_liked
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: desc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 37
                limit:
                  type: integer
                  description: ''
                  example: 8
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package/purchase/{id}':
    post:
      summary: ''
      operationId: postApiVerActivitypointPackagePurchaseId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: integer
                  description: ''
                  example: 6
              required:
                - payment_gateway
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minima
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the purchase.'
        example: '12'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/package/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the package.'
        example: '605'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/setting':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_viewed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/statistic/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: architecto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the statistic.'
        example: '88'
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: integer
                  description: ''
                  example: 1
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:38'
                to:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>from</code>.'
                  example: '2040-03-14'
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: most_discussed
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 37
                limit:
                  type: integer
                  description: ''
                  example: 10
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
  '/api/{ver}/activitypoint/transaction/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Activity Point'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: beatae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertise
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 489.7407
                view:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: ''
                  example: nulla
                end_date:
                  type: string
                  description: ''
                  example: accusantium
                status:
                  type: string
                  description: ''
                  example: quaerat
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 71
                limit:
                  type: number
                  description: ''
                  example: 11.27982
      security: []
    post:
      summary: ''
      operationId: postApiVerAdvertiseAdvertise
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 1287837.94956
                image:
                  type: object
                  description: ''
                  example: []
                  properties:
                    status:
                      type: string
                      description: 'This field is required when <code>image.temp_file</code> is present.'
                      example: in
                    temp_file:
                      type: number
                      description: 'This field is required when <code>image.id</code> is <code>0</code>.'
                      example: 311.24629
                url:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'https://www.schowalter.com/et-consequuntur-reiciendis-natus-nisi-et'
                image_tooltip:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lxptiesrqtpgrxxzu
                html_title:
                  type: string
                  description: 'This field is required when <code>creation_type</code> is <code>html</code>. Must not be greater than 25 characters.'
                  example: bzhfkea
                html_description:
                  type: string
                  description: 'Must not be greater than 135 characters.'
                  example: sgwblbuhxznw
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: dpktceabwqkce
                total_click:
                  type: string
                  description: ''
                  example: null
                total_impression:
                  type: string
                  description: ''
                  example: null
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 25
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - aut
                  items:
                    type: string
                is_active:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:38'
                end_date:
                  type: string
                  description: ''
                  example: null
                creation_type:
                  type: string
                  description: ''
                  example: dolores
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - placement_id
                - image
                - url
                - title
                - start_date
                - creation_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/active/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseActiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '614'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/hide/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseHideId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide.'
        example: '01150'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/report/{id}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertiseReportId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                report_type:
                  type: string
                  description: ''
                  example: sint
                view:
                  type: string
                  description: ''
                  example: sequi
                start_date_month:
                  type: string
                  description: ''
                  example: quod
                end_date_month:
                  type: string
                  description: ''
                  example: qui
                start_date_week:
                  type: string
                  description: ''
                  example: iste
                end_date_week:
                  type: string
                  description: ''
                  example: molestiae
                start_date_day:
                  type: string
                  description: ''
                  example: accusamus
                end_date_day:
                  type: string
                  description: ''
                  example: rerum
              required:
                - report_type
                - view
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the report.'
        example: '34553'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/show':
    get:
      summary: ''
      operationId: getApiVerAdvertiseAdvertiseShow
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                placement_id:
                  type: number
                  description: ''
                  example: 1106342.0
                location:
                  type: string
                  description: ''
                  example: nesciunt
              required:
                - placement_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/total/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseAdvertiseTotalId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  description: ''
                  example: eveniet
              required:
                - type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the total.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/advertise/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    put:
      summary: ''
      operationId: putApiVerAdvertiseAdvertiseId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: iswogbo
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: number
                  description: 'Must be at least 1.'
                  example: 55
                age_to:
                  type: number
                  description: ''
                  example: 709782.2
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - temporibus
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the advertise.'
        example: '28'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: deleniti
                end_date:
                  type: string
                  description: ''
                  example: qui
                status:
                  type: string
                  description: ''
                  example: sunt
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 3
                limit:
                  type: number
                  description: ''
                  example: 19049969.9
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseInvoiceCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '5334'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/change':
    post:
      summary: ''
      operationId: postApiVerAdvertiseInvoiceChange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: 9.24132404
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                item_type:
                  type: string
                  description: ''
                  example: delectus
                payment_gateway:
                  type: number
                  description: ''
                  example: 39414632.0
              required:
                - item_id
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quam
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/invoice/payment':
    post:
      summary: ''
      operationId: postApiVerAdvertiseInvoicePayment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invoice_id:
                  type: number
                  description: ''
                  example: 9335.0
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 85
                item_type:
                  type: string
                  description: ''
                  example: dolores
                payment_gateway:
                  type: number
                  description: ''
                  example: 5585.9355
              required:
                - item_id
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                start_date:
                  type: string
                  description: ''
                  example: soluta
                end_date:
                  type: string
                  description: ''
                  example: quia
                status:
                  type: string
                  description: ''
                  example: iste
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 70
                limit:
                  type: number
                  description: ''
                  example: 65604908.0
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: ztmihaceslerh
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 43
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - eos
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:38'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: aspernatur
                item_id:
                  type: integer
                  description: ''
                  example: 1
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: 92
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/active/{id}':
    patch:
      summary: ''
      operationId: patchApiVerAdvertiseSponsorActiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: natus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the active.'
        example: '0222'
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/feed':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: iivkvutnvggzodttutln
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 14
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - iure
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:38'
                end_date:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: aperiam
                item_id:
                  type: integer
                  description: ''
                  example: 18
                total_impression:
                  type: integer
                  description: 'Must be at least 100.'
                  example: 91
              required:
                - title
                - start_date
                - item_type
                - item_id
                - total_impression
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/form/feed/{itemType}/{itemId}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseSponsorFormFeedItemTypeItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
      -
        in: path
        name: itemType
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: inventore
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/form/{itemType}/{itemId}':
    get:
      summary: ''
      operationId: getApiVerAdvertiseSponsorFormItemTypeItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: itemType
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
      -
        in: path
        name: itemId
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/advertise/sponsor/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must not be greater than  255 characters.'
                  example: renzquucrflhyoashzzk
                genders:
                  type: array
                  description: 'This field is required when <code>genders</code> is present.'
                  example: null
                  items:
                    type: string
                age_from:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 27
                age_to:
                  type: string
                  description: ''
                  example: null
                languages:
                  type: array
                  description: 'This field is required when <code>languages</code> is present.'
                  example:
                    - voluptatem
                  items:
                    type: string
                location:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
              required:
                - title
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '554'
        required: true
        schema:
          type: string
  '/api/{ver}/sponsor/total/click':
    post:
      summary: ''
      operationId: postApiVerSponsorTotalClick
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: animi
                item_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - item_type
                - item_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
  '/api/{ver}/sponsor/total/view':
    post:
      summary: ''
      operationId: postApiVerSponsorTotalView
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Advertise
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: omnis
                item_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - item_type
                - item_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
  '/api/{ver}/announcement':
    get:
      summary: 'Browse announcement.'
      operationId: browseAnnouncement
      description: ''
      parameters:
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
  '/api/{ver}/announcement/view':
    get:
      summary: 'Browse announcement.'
      operationId: browseAnnouncement
      description: ''
      parameters:
        -
          in: query
          name: announcement_id
          description: ''
          example: 308514161.09299
          required: true
          schema:
            type: number
            description: ''
            example: 308514161.09299
        -
          in: query
          name: limit
          description: 'The items to return.'
          example: 10
          required: false
          schema:
            type: integer
            description: 'The items to return.'
            example: 10
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    post:
      summary: 'Hide announcement.'
      operationId: hideAnnouncement
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                announcement_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 64
              required:
                - announcement_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: expedita
        required: true
        schema:
          type: string
  '/api/{ver}/announcement/{id}':
    get:
      summary: 'View announcement.'
      operationId: viewAnnouncement
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Announcement
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the announcement.'
        example: '77100'
        required: true
        schema:
          type: string
  '/api/{ver}/attachment':
    post:
      summary: 'Upload attachment.'
      operationId: uploadAttachment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Attachments
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: beatae
                file:
                  type: string
                  format: binary
                  description: 'Must be a file. Must not be greater than 8192 kilobytes.'
                item_type:
                  type: string
                  description: ''
                  example: et
                upload_type:
                  type: string
                  description: ''
                  example: deleniti
              required:
                - file
                - item_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
  '/api/{ver}/attachment/download/{id}':
    get:
      summary: 'Allow downloading resource.'
      operationId: allowDownloadingResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Attachments
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/authorization/device':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authorization
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                device_token:
                  type: string
                  description: ''
                  example: molestias
                device_id:
                  type: string
                  description: ''
                  example: ea
                device_uid:
                  type: string
                  description: ''
                  example: qui
                token_source:
                  type: string
                  description: ''
                  example: dolores
                platform:
                  type: string
                  description: ''
                  example: officia
                platform_version:
                  type: string
                  description: ''
                  example: alias
                extra:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - device_token
                - device_id
                - token_source
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/authorization/device/logout-all':
    patch:
      summary: ''
      operationId: patchApiVerAuthorizationDeviceLogoutAll
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Authorization
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/blog':
    get:
      summary: 'Browse blog.'
      operationId: browseBlog
      description: ''
      parameters:
        -
          in: query
          name: q
          description: ''
          example: omnis
          required: false
          schema:
            type: string
            description: ''
            example: omnis
        -
          in: query
          name: view
          description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
          example: all
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>my</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>draft</code>, or <code>friend</code>.'
            example: all
        -
          in: query
          name: sort
          description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
          example: latest
          required: false
          schema:
            type: string
            description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
            example: latest
        -
          in: query
          name: sort_type
          description: 'Must be one of <code>desc</code> or <code>asc</code>.'
          example: asc
          required: false
          schema:
            type: string
            description: 'Must be one of <code>desc</code> or <code>asc</code>.'
            example: asc
        -
          in: query
          name: when
          description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
          example: this_month
          required: false
          schema:
            type: string
            description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
            example: this_month
        -
          in: query
          name: category_id
          description: ''
          example: 17
          required: false
          schema:
            type: integer
            description: ''
            example: 17
        -
          in: query
          name: user_id
          description: 'The profile id to filter.'
          example: 0
          required: false
          schema:
            type: integer
            description: 'The profile id to filter.'
            example: 0
        -
          in: query
          name: owner_id
          description: ''
          example: 15
          required: false
          schema:
            type: integer
            description: ''
            example: 15
        -
          in: query
          name: page
          description: 'Must be at least 1.'
          example: 47
          required: false
          schema:
            type: integer
            description: 'Must be at least 1.'
            example: 47
        -
          in: query
          name: limit
          description: ''
          example: 16
          required: false
          schema:
            type: integer
            description: ''
            example: 16
        -
          in: query
          name: is_featured
          description: ''
          example: null
          required: false
          schema:
            type: string
            description: ''
            example: null
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    post:
      summary: 'Create blog.'
      operationId: createBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: et
                categories:
                  type: array
                  description: ''
                  example:
                    - 43.6
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 153.716
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 67735.097656496
                text:
                  type: string
                  description: ''
                  example: eos
                draft:
                  type: number
                  description: ''
                  example: 6132.264
                tags:
                  type: array
                  description: ''
                  example:
                    - ad
                  items:
                    type: string
                privacy:
                  type: string
                  description: ''
                  example: dolore
                captcha:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - veritatis
                  items:
                    type: number
              required:
                - title
                - text
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
  '/api/{ver}/blog-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 0.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 11
                q:
                  type: string
                  description: ''
                  example: quia
                level:
                  type: number
                  description: ''
                  example: 44382.0
                limit:
                  type: number
                  description: ''
                  example: 4450.50019
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ad
        required: true
        schema:
          type: string
  '/api/{ver}/blog/approve/{id}':
    patch:
      summary: 'Approve blog.'
      operationId: approveBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '2336'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/feature/{id}':
    patch:
      summary: 'Feature blog.'
      operationId: featureBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: totam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '91521'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/form':
    get:
      summary: ''
      operationId: getApiVerBlogForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 14.44484
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/api/{ver}/blog/form/{id}':
    get:
      summary: ''
      operationId: getApiVerBlogFormId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 27.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: alias
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '8124'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/publish/{id}':
    patch:
      summary: 'Publish blog.'
      operationId: publishBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: totam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the publish.'
        example: '14'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/search-form':
    get:
      summary: 'Get search form.'
      operationId: getSearchForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/blog/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor blog in feed.'
      operationId: sponsorBlogInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 219.0
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/sponsor/{id}':
    patch:
      summary: 'Sponsor blog.'
      operationId: sponsorBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: eligendi
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '84586'
        required: true
        schema:
          type: string
  '/api/{ver}/blog/{id}':
    get:
      summary: 'View Blog.'
      operationId: viewBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    put:
      summary: 'Update blog.'
      operationId: updateBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: rerum
                categories:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - 80
                  items:
                    type: integer
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 66.78084
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: et
                text:
                  type: string
                  description: ''
                  example: possimus
                tags:
                  type: array
                  description: ''
                  example:
                    - magni
                  items:
                    type: string
                draft:
                  type: number
                  description: ''
                  example: 28883.7489
                published:
                  type: boolean
                  description: ''
                  example: true
                privacy:
                  type: string
                  description: ''
                  example: null
                attachments:
                  type: array
                  description: ''
                  example:
                    - nisi
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Delete blog.'
      operationId: deleteBlog
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Blog
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sequi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the blog.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/captcha/verify':
    post:
      summary: ''
      operationId: postApiVerCaptchaVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CAPTCHA
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                action_name:
                  type: string
                  description: ''
                  example: velit
                captcha:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illum
        required: true
        schema:
          type: string
  '/api/{ver}/image-captcha/refresh':
    post:
      summary: ''
      operationId: postApiVerImageCaptchaRefresh
      description: ''
      parameters: []
      responses: {  }
      tags:
        - CAPTCHA
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: reiciendis
        required: true
        schema:
          type: string
  '/api/{ver}/chat':
    get:
      summary: ''
      operationId: getApiVerChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                message_id:
                  type: number
                  description: ''
                  example: 1774.7
                room_id:
                  type: number
                  description: ''
                  example: 0.6
                last_message_id:
                  type: number
                  description: ''
                  example: 808.6239
                scroll:
                  type: string
                  description: ''
                  example: perspiciatis
                upper_bound:
                  type: number
                  description: 'Must be at least 1.'
                  example: 17
                lower_bound:
                  type: number
                  description: 'Must be at least 1.'
                  example: 66
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 30
                limit:
                  type: integer
                  description: ''
                  example: 14
              required:
                - room_id
      security: []
    post:
      summary: ''
      operationId: postApiVerChat
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_id:
                  type: number
                  description: ''
                  example: 73924092.65
                message:
                  type: string
                  description: ''
                  example: natus
                type:
                  type: string
                  description: ''
                  example: voluptatem
                reply_id:
                  type: integer
                  description: ''
                  example: 3
                tempId:
                  type: string
                  description: ''
                  example: suscipit
                attachments:
                  type: array
                  description: ''
                  example:
                    - magnam
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: beatae
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room':
    get:
      summary: ''
      operationId: getApiVerChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: dolores
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 22
                limit:
                  type: integer
                  description: ''
                  example: 16
      security: []
    post:
      summary: ''
      operationId: postApiVerChatRoom
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                member_ids:
                  type: array
                  description: ''
                  example:
                    - 543269.33234512
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - modi
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/addForm':
    get:
      summary: ''
      operationId: getApiVerChatRoomAddForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magni
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/mark-all-read':
    put:
      summary: ''
      operationId: putApiVerChatRoomMarkAllRead
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                room_ids:
                  type: array
                  description: ''
                  example:
                    - 372330.412638
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/mark-read/{id}':
    put:
      summary: ''
      operationId: putApiVerChatRoomMarkReadId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the mark read.'
        example: '8501'
        required: true
        schema:
          type: string
  '/api/{ver}/chat-room/{id}':
    get:
      summary: ''
      operationId: getApiVerChatRoomId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerChatRoomId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the chat room.'
        example: '291'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '472558'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/react/{id}':
    put:
      summary: ''
      operationId: putApiVerChatReactId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                react:
                  type: string
                  description: ''
                  example: autem
                remove:
                  type: boolean
                  description: ''
                  example: false
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the react.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/remove/{id}':
    put:
      summary: ''
      operationId: putApiVerChatRemoveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove.'
        example: '36216'
        required: true
        schema:
          type: string
  '/api/{ver}/chat/{id}':
    get:
      summary: ''
      operationId: getApiVerChatId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      security: []
    put:
      summary: ''
      operationId: putApiVerChatId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Chat
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: laudantium
                type:
                  type: string
                  description: ''
                  example: dolorum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the chat.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/can-create-direct-message/{type}/{id_from}/{id_to}':
    get:
      summary: ''
      operationId: getApiVerChatplusCanCreateDirectMessageTypeId_fromId_to
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
      -
        in: path
        name: type
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id_from
        description: ''
        example: facilis
        required: true
        schema:
          type: string
      -
        in: path
        name: id_to
        description: ''
        example: in
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/export-users':
    get:
      summary: ''
      operationId: getApiVerChatplusExportUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/jobs':
    get:
      summary: ''
      operationId: getApiVerChatplusJobs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/me':
    get:
      summary: ''
      operationId: getApiVerChatplusMe
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/prefetch-users':
    get:
      summary: ''
      operationId: getApiVerChatplusPrefetchUsers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/rooms/upload/{room_id}':
    post:
      summary: ''
      operationId: postApiVerChatplusRoomsUploadRoom_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ''
                  example: eum
                roomId:
                  type: string
                  description: ''
                  example: neque
                token:
                  type: string
                  description: ''
                  example: laudantium
                msg:
                  type: string
                  description: ''
                  example: voluptatum
                file:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - userId
                - roomId
                - token
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: room_id
        description: 'The ID of the room.'
        example: cupiditate
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/settings':
    get:
      summary: ''
      operationId: getApiVerChatplusSettings
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/spotlight':
    get:
      summary: ''
      operationId: getApiVerChatplusSpotlight
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/{ver}/chatplus/user/{type}/{query}':
    get:
      summary: ''
      operationId: getApiVerChatplusUserTypeQuery
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - ChatPlus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
      -
        in: path
        name: type
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: query
        description: ''
        example: enim
        required: true
        schema:
          type: string
  '/api/{ver}/comment':
    get:
      summary: 'Browse comments.'
      operationId: browseComments
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 101429069.948
                item_type:
                  type: string
                  description: ''
                  example: aut
                parent_id:
                  type: number
                  description: ''
                  example: 5.65656
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 40
                limit:
                  type: number
                  description: ''
                  example: 88.0
                sort:
                  type: string
                  description: ''
                  example: autem
                sort_type:
                  type: string
                  description: ''
                  example: sit
                last_id:
                  type: number
                  description: ''
                  example: 0.085758
                excludes:
                  type: array
                  description: ''
                  example:
                    - 3.5701
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 16
              required:
                - item_id
                - item_type
    post:
      summary: 'Create comment.'
      operationId: createComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 78004.0
                item_type:
                  type: string
                  description: ''
                  example: aperiam
                text:
                  type: string
                  description: 'This field is required when none of <code>photo_id</code> and <code>sticker_id</code> are present.'
                  example: vero
                parent_id:
                  type: number
                  description: ''
                  example: 52569535.72
                photo_id:
                  type: number
                  description: ''
                  example: 459.591
                sticker_id:
                  type: number
                  description: ''
                  example: 133297958.92801
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: amet
        required: true
        schema:
          type: string
  '/api/{ver}/comment-lists':
    get:
      summary: ''
      operationId: getApiVerCommentLists
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 7027.62989
                item_type:
                  type: string
                  description: ''
                  example: expedita
                parent_id:
                  type: number
                  description: ''
                  example: 179886608.88943
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 76
                limit:
                  type: number
                  description: ''
                  example: 861.393965
                sort:
                  type: string
                  description: ''
                  example: aut
                sort_type:
                  type: string
                  description: ''
                  example: et
                last_id:
                  type: number
                  description: ''
                  example: 19.62853041
                excludes:
                  type: array
                  description: ''
                  example:
                    - 89659.7
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 12
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/comment/approve/{id}':
    patch:
      summary: 'Approve comment.'
      operationId: approveComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ad
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/download/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentDownloadId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the download.'
        example: '9616'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/hide':
    post:
      summary: ''
      operationId: postApiVerCommentHide
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                comment_id:
                  type: number
                  description: ''
                  example: 86728.058328
                is_hidden:
                  type: string
                  description: ''
                  example: illum
                is_global:
                  type: string
                  description: ''
                  example: null
              required:
                - comment_id
                - is_hidden
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptates
        required: true
        schema:
          type: string
  '/api/{ver}/comment/history-edit/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentHistoryEditId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the history edit.'
        example: '005'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/preview/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the preview.'
        example: '04597'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/related-comment':
    get:
      summary: ''
      operationId: getApiVerCommentRelatedComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1036337.1141512
                item_type:
                  type: string
                  description: ''
                  example: animi
                parent_id:
                  type: number
                  description: ''
                  example: 28464558.22
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 16
                limit:
                  type: number
                  description: ''
                  example: 22405.6465881
                sort:
                  type: string
                  description: ''
                  example: vel
                sort_type:
                  type: string
                  description: ''
                  example: error
                last_id:
                  type: number
                  description: ''
                  example: 222489.0
                excludes:
                  type: array
                  description: ''
                  example:
                    - 2.557
                  items:
                    type: number
                comment_id:
                  type: integer
                  description: ''
                  example: 4
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/{ver}/comment/reply/{id}':
    get:
      summary: ''
      operationId: getApiVerCommentReplyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the reply.'
        example: '03'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/translate':
    get:
      summary: ''
      operationId: getApiVerCommentTranslate
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 9
                target:
                  type: string
                  description: ''
                  example: dolores
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ex
        required: true
        schema:
          type: string
  '/api/{ver}/comment/{id}':
    get:
      summary: 'View comment.'
      operationId: viewComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    put:
      summary: 'Update comment.'
      operationId: updateComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: ut
                photo_id:
                  type: string
                  description: ''
                  example: null
                is_hide:
                  type: number
                  description: ''
                  example: 301658454.72111
                sticker_id:
                  type: string
                  description: ''
                  example: null
    delete:
      summary: 'Remove comment.'
      operationId: removeComment
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/comment/{id}/remove-preview':
    patch:
      summary: ''
      operationId: patchApiVerCommentIdRemovePreview
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Comment
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the comment.'
        example: '40'
        required: true
        schema:
          type: string
  '/api/{ver}/contact':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Contact
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category_id:
                  type: integer
                  description: ''
                  example: 6
                full_name:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: rf
                subject:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: j
                email:
                  type: string
                  description: 'Must be a valid email address. Must be between 1 and 255 characters.'
                  example: elisha98@example.com
                message:
                  type: string
                  description: ''
                  example: culpa
                send_copy:
                  type: integer
                  description: ''
                  example: 2
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - category_id
                - full_name
                - subject
                - email
                - message
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
  '/api/{ver}/core/admin/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: ab
  '/api/{ver}/core/custom-privacy-option':
    get:
      summary: ''
      operationId: getApiVerCoreCustomPrivacyOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: omnis
                item_id:
                  type: number
                  description: ''
                  example: 538125.197968
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 68
                limit:
                  type: number
                  description: ''
                  example: 3629456.7
                sort:
                  type: string
                  description: ''
                  example: facilis
                sort_type:
                  type: string
                  description: ''
                  example: autem
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/core/custom-privacy-option/form':
    get:
      summary: ''
      operationId: getApiVerCoreCustomPrivacyOptionForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/core/form/{formName}/{id}':
    get:
      summary: ''
      operationId: getApiVerCoreFormFormNameId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: error
        required: true
        schema:
          type: string
      -
        in: path
        name: formName
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '680685'
  '/api/{ver}/core/grid/{gridName}/{parent}':
    get:
      summary: 'Show data grid.'
      operationId: showDataGrid
      description: ''
      parameters:
        -
          in: query
          name: dataGrid
          description: 'Grid name.'
          example: phrase_admin
          required: true
          schema:
            type: string
            description: 'Grid name.'
            example: phrase_admin
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: gridName
        description: ''
        example: quidem
        required: true
        schema:
          type: string
      -
        in: path
        name: parent
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: qui
  '/api/{ver}/core/mobile/action-settings':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deserunt
        required: true
        schema:
          type: string
  '/api/{ver}/core/mobile/app-settings':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
  '/api/{ver}/core/mobile/form/{formName}/{id}':
    get:
      summary: ''
      operationId: getApiVerCoreMobileFormFormNameId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
      -
        in: path
        name: formName
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '04'
  '/api/{ver}/core/mobile/settings/{revision}':
    get:
      summary: 'View app settings.'
      operationId: viewAppSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: similique
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: similique
  '/api/{ver}/core/package/build/callback':
    get:
      summary: ''
      operationId: getApiVerCorePackageBuildCallback
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                buildId:
                  type: string
                  description: ''
                  example: et
              required:
                - buildId
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsa
        required: true
        schema:
          type: string
  '/api/{ver}/core/status':
    get:
      summary: 'View user badge status.'
      operationId: viewUserBadgeStatus
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/core/translation/{group}/{lang}/{revision}':
    get:
      summary: ''
      operationId: getApiVerCoreTranslationGroupLangRevision
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: group
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: lang
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: perspiciatis
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: qui
  '/api/{ver}/core/url-to-route':
    get:
      summary: 'Get canonical URL.'
      operationId: getCanonicalURL
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
                  description: ''
                  example: sapiente
              required:
                - url
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odit
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/action-settings':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/app-settings':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolore
        required: true
        schema:
          type: string
  '/api/{ver}/core/web/settings/{revision}':
    get:
      summary: 'View frontend settings.'
      operationId: viewFrontendSettings
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cum
        required: true
        schema:
          type: string
      -
        in: path
        name: revision
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: id
  '/api/{ver}/file':
    post:
      summary: 'Upload single.'
      operationId: uploadSingle
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: nihil
                file:
                  type: string
                  description: ''
                  example: blanditiis
                file_type:
                  type: string
                  description: ''
                  example: ex
                item_type:
                  type: string
                  description: ''
                  example: atque
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - consequatur
                  items:
                    type: string
                base64:
                  type: string
                  description: ''
                  example: ut
              required:
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: optio
        required: true
        schema:
          type: string
  '/api/{ver}/files':
    post:
      summary: 'Upload multiple file.'
      operationId: uploadMultipleFile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                storage_id:
                  type: string
                  description: ''
                  example: sint
                0:
                  type: string
                  description: ''
                  example: null
                item_type:
                  type: string
                  description: ''
                  example: modi
                upload_type:
                  type: string
                  description: ''
                  example: libero
                thumbnail_sizes:
                  type: array
                  description: ''
                  example:
                    - ut
                  items:
                    type: string
                file:
                  type: array
                  description: ''
                  example:
                    - dolor
                  items:
                    type: string
              required:
                - file
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/link/fetch':
    post:
      summary: 'View link.'
      operationId: viewLink
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  description: ''
                  example: ex
                owner_id:
                  type: integer
                  description: ''
                  example: 20
              required:
                - link
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
  '/api/{ver}/ping':
    get:
      summary: ''
      operationId: getApiVerPing
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Core
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                from_date:
                  type: string
                  description: ''
                  example: quos
                to_date:
                  type: string
                  description: ''
                  example: omnis
                status:
                  type: string
                  description: ''
                  example: null
                id:
                  type: integer
                  description: ''
                  example: 14
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEmoneyRequestCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magni
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '1034212'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/request/{id}':
    get:
      summary: ''
      operationId: getApiVerEmoneyRequestId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: atque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: '73'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/statistic/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the statistic.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/transaction':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sit
                base_currency:
                  type: string
                  description: ''
                  example: esse
                status:
                  type: string
                  description: ''
                  example: null
                from_date:
                  type: string
                  description: ''
                  example: et
                to_date:
                  type: string
                  description: ''
                  example: ut
                buyer:
                  type: string
                  description: ''
                  example: in
                id:
                  type: integer
                  description: ''
                  example: 7
                source:
                  type: string
                  description: ''
                  example: error
                type:
                  type: string
                  description: ''
                  example: magnam
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: atque
        required: true
        schema:
          type: string
  '/api/{ver}/emoney/transaction/{id}':
    get:
      summary: ''
      operationId: getApiVerEmoneyTransactionId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - E-Wallet
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the transaction.'
        example: '6410805'
        required: true
        schema:
          type: string
  '/api/{ver}/event':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                view:
                  type: string
                  description: ''
                  example: vel
                sort:
                  type: string
                  description: ''
                  example: voluptate
                sort_type:
                  type: string
                  description: ''
                  example: dolor
                when:
                  type: string
                  description: ''
                  example: est
                category_id:
                  type: number
                  description: ''
                  example: 2.8
                user_id:
                  type: number
                  description: ''
                  example: 21.0
                owner_id:
                  type: integer
                  description: ''
                  example: 2
                event_id:
                  type: number
                  description: ''
                  example: 704.13
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 33
                where:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ehoibodusundfrdkxyplohsmiwqidrsmoz
                lat:
                  type: number
                  description: ''
                  example: 1714.12105342
                lng:
                  type: number
                  description: ''
                  example: 25604004.562
                radius:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                limit:
                  type: number
                  description: ''
                  example: 32591645.448726
                is_online:
                  type: number
                  description: ''
                  example: 6.2
                is_featured:
                  type: number
                  description: ''
                  example: 277759.095
                bounds_west:
                  type: number
                  description: ''
                  example: 63220055.683261
                bounds_east:
                  type: number
                  description: ''
                  example: 41905.82402
                bounds_south:
                  type: number
                  description: ''
                  example: 179935.05809102
                bounds_north:
                  type: number
                  description: ''
                  example: 22.393
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: perferendis
                text:
                  type: string
                  description: ''
                  example: doloribus
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    file_type:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: veniam
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 15493.16683673
                attachments:
                  type: array
                  description: ''
                  example:
                    - quia
                  items:
                    type: number
                categories:
                  type: array
                  description: ''
                  example:
                    - 17.371062
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 1424335.72417
                is_online:
                  type: number
                  description: ''
                  example: 22291.0
                event_url:
                  type: string
                  description: 'This field is required when <code>is_online</code> is <code>1</code>.  Must be a valid URL.'
                  example: 'http://www.renner.com/eaque-nam-magnam-aut-eveniet-alias'
                start_time:
                  type: string
                  description: 'Must be a valid date. Must be a date before <code>end_time</code>.'
                  example: '2022-12-31'
                end_time:
                  type: string
                  description: 'Must be a valid date. Must be a date after <code>start_time</code>.'
                  example: '2074-10-28'
                privacy:
                  type: string
                  description: ''
                  example: sit
                host:
                  type: object
                  description: ''
                  example: null
                  properties: []
                image_position:
                  type: string
                  description: ''
                  example: quod
                location_name:
                  type: string
                  description: 'This field is required when <code>is_online</code> is <code>0</code>.'
                  example: enim
              required:
                - name
                - is_online
                - start_time
                - end_time
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: animi
        required: true
        schema:
          type: string
  '/api/{ver}/event-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 6991.161503
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 15
                q:
                  type: string
                  description: ''
                  example: cumque
                level:
                  type: number
                  description: ''
                  example: 42594839.513717
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 20
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
  '/api/{ver}/event-code':
    post:
      summary: ''
      operationId: postApiVerEventCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 58795.87
                refresh:
                  type: integer
                  description: ''
                  example: 8
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
  '/api/{ver}/event-code/accept/{code}':
    post:
      summary: ''
      operationId: postApiVerEventCodeAcceptCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: dolores
        required: true
        schema:
          type: string
  '/api/{ver}/event-code/verify/{code}':
    get:
      summary: ''
      operationId: getApiVerEventCodeVerifyCode
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/event-host-invite':
    put:
      summary: ''
      operationId: putApiVerEventHostInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 71478743.0773
                accept:
                  type: number
                  description: ''
                  example: 3.7
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 350264333.94703
                user_id:
                  type: string
                  description: ''
                  example: saepe
              required:
                - event_id
                - user_id
    get:
      summary: ''
      operationId: getApiVerEventHostInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 0.89702481
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 9
                limit:
                  type: number
                  description: ''
                  example: 500293.97796568
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 3938286.4
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 28988.9627
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - id
                  items:
                    type: number
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: neque
        required: true
        schema:
          type: string
  '/api/{ver}/event-invite':
    put:
      summary: ''
      operationId: putApiVerEventInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 9609.5
                accept:
                  type: number
                  description: ''
                  example: 186.285
              required:
                - event_id
                - accept
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 2233.58997
                user_id:
                  type: string
                  description: ''
                  example: delectus
              required:
                - event_id
                - user_id
    get:
      summary: ''
      operationId: getApiVerEventInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 36.03567891
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 15
                limit:
                  type: number
                  description: ''
                  example: 416514507.0
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 827173.0
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 5.71
                  items:
                    type: number
                users:
                  type: array
                  description: ''
                  example:
                    - maxime
                  items:
                    type: number
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iusto
        required: true
        schema:
          type: string
  '/api/{ver}/event-member':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                event_id:
                  type: number
                  description: ''
                  example: 34655.82099
                view:
                  type: string
                  description: ''
                  example: eum
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 1387.447110144
              required:
                - event_id
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 4324.44
                invite_code:
                  type: string
                  description: ''
                  example: labore
              required:
                - event_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/host':
    delete:
      summary: ''
      operationId: deleteApiVerEventMemberHost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 3066616.836
                user_id:
                  type: number
                  description: ''
                  example: 33113717.375494
              required:
                - event_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quas
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/interest/{id}':
    put:
      summary: ''
      operationId: putApiVerEventMemberInterestId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                interest:
                  type: number
                  description: ''
                  example: 483721640.42838
                invite_code:
                  type: string
                  description: ''
                  example: aliquid
              required:
                - interest
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the interest.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/member':
    delete:
      summary: ''
      operationId: deleteApiVerEventMemberMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                event_id:
                  type: number
                  description: ''
                  example: 2874213.3052567
                user_id:
                  type: number
                  description: ''
                  example: 708536014.0
              required:
                - event_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/event-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event member.'
        example: '834'
        required: true
        schema:
          type: string
  '/api/{ver}/event/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '30274'
        required: true
        schema:
          type: string
  '/api/{ver}/event/banner/{id}':
    post:
      summary: ''
      operationId: postApiVerEventBannerId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 690.802488096
                position:
                  type: string
                  description: ''
                  example: nam
    delete:
      summary: ''
      operationId: deleteApiVerEventBannerId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laboriosam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the banner.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/event/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/event/setting/form/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '223935'
        required: true
        schema:
          type: string
  '/api/{ver}/event/setting/{id}':
    put:
      summary: ''
      operationId: putApiVerEventSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: 14.55148536
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the setting.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/event/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor event in feed.'
      operationId: sponsorEventInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 2638527.986
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '58'
        required: true
        schema:
          type: string
  '/api/{ver}/event/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerEventSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: et
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: accusantium
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '262'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}/export':
    get:
      summary: ''
      operationId: getApiVerEventIdExport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iusto
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '7721'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}/mass-email':
    post:
      summary: ''
      operationId: postApiVerEventIdMassEmail
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                subject:
                  type: string
                  description: ''
                  example: consequatur
                text:
                  type: string
                  description: ''
                  example: esse
              required:
                - subject
                - text
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}/mass-invite':
    patch:
      summary: ''
      operationId: patchApiVerEventIdMassInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/event/{id}/stats':
    get:
      summary: ''
      operationId: getApiVerEventIdStats
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Event
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fuga
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the event.'
        example: '28096883'
        required: true
        schema:
          type: string
  '/api/{ver}/featured/invoice':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: aliquid
                package_id:
                  type: integer
                  description: ''
                  example: 12
                status:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: integer
                  description: ''
                  example: 8
                from_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:39'
                to_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:39'
                limit:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 50.'
                  example: 20
                id:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 74
                transaction_id:
                  type: string
                  description: ''
                  example: ullam
                q:
                  type: string
                  description: ''
                  example: rerum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dignissimos
        required: true
        schema:
          type: string
  '/api/{ver}/featured/invoice/payment':
    post:
      summary: ''
      operationId: postApiVerFeaturedInvoicePayment
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: integer
                  description: ''
                  example: 11
                invoice_id:
                  type: number
                  description: ''
                  example: 6298.221
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: hic
        required: true
        schema:
          type: string
  '/api/{ver}/featured/invoice/{id}/cancel':
    patch:
      summary: ''
      operationId: patchApiVerFeaturedInvoiceIdCancel
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deserunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the invoice.'
        example: '13'
        required: true
        schema:
          type: string
  '/api/{ver}/featured/invoice/{id}':
    get:
      summary: ''
      operationId: getApiVerFeaturedInvoiceId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the invoice.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/featured/item':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: saepe
                package_id:
                  type: integer
                  description: ''
                  example: 11
                status:
                  type: string
                  description: ''
                  example: null
                from_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:39'
                to_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:39'
                limit:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 50.'
                  example: 16
                package_duration_period:
                  type: string
                  description: ''
                  example: null
                id:
                  type: integer
                  description: ''
                  example: 19
                pricing:
                  type: string
                  description: ''
                  example: null
      security: []
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: aut
                item_id:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 24
                package_id:
                  type: integer
                  description: ''
                  example: 5
              required:
                - item_type
                - item_id
                - package_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fuga
        required: true
        schema:
          type: string
  '/api/{ver}/featured/item/form/{item_type}/{item_id}':
    get:
      summary: ''
      operationId: getApiVerFeaturedItemFormItem_typeItem_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
      -
        in: path
        name: item_type
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: item_id
        description: 'The ID of the item.'
        example: blanditiis
        required: true
        schema:
          type: string
  '/api/{ver}/featured/item/{id}/cancel':
    patch:
      summary: ''
      operationId: patchApiVerFeaturedItemIdCancel
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/featured/item/{id}/payment-form':
    get:
      summary: ''
      operationId: getApiVerFeaturedItemIdPaymentForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '0718347'
        required: true
        schema:
          type: string
  '/api/{ver}/featured/item/{id}':
    get:
      summary: ''
      operationId: getApiVerFeaturedItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerFeaturedItemId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/featured/package':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Featured
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: nam
                q:
                  type: string
                  description: ''
                  example: tenetur
              required:
                - view
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minima
        required: true
        schema:
          type: string
  '/api/{ver}/feed':
    get:
      summary: 'Browse feed item.'
      operationId: browseFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aliquid
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 39
                limit:
                  type: number
                  description: ''
                  example: 10307758.0
                user_id:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 51
                item_id:
                  type: number
                  description: ''
                  example: 2281670.0597683
                item_type:
                  type: string
                  description: ''
                  example: sapiente
                hashtag:
                  type: string
                  description: ''
                  example: null
                last_feed_id:
                  type: number
                  description: ''
                  example: 14252145.011198
                related_comment_friend_only:
                  type: string
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
                view:
                  type: string
                  description: ''
                  example: odit
                from:
                  type: string
                  description: ''
                  example: deleniti
                type_id:
                  type: string
                  description: ''
                  example: fugit
                sort:
                  type: string
                  description: ''
                  example: deleniti
                sort_type:
                  type: string
                  description: ''
                  example: minus
                status:
                  type: string
                  description: ''
                  example: sunt
                is_preview_tag:
                  type: string
                  description: ''
                  example: null
                has_pin_post:
                  type: string
                  description: ''
                  example: null
                sponsored_feed_ids:
                  type: array
                  description: 'Must be at least 1.'
                  example:
                    - 60
                  items:
                    type: integer
    post:
      summary: 'Create feed.'
      operationId: createFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: aut
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 64
                parent_item_id:
                  type: string
                  description: ''
                  example: null
                post_as_parent:
                  type: string
                  description: ''
                  example: null
                user_status:
                  type: string
                  description: ''
                  example: null
                schedule_time:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:39'
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: quia
                    lat:
                      type: number
                      description: ''
                      example: 643.46530166
                    lng:
                      type: number
                      description: ''
                      example: 44352.8403896
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 2544.6
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 0.0
                      px:
                        type: number
                        description: ''
                        example: 3050.518
                      py:
                        type: number
                        description: ''
                        example: 874720.002554
              required:
                - post_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
  '/api/{ver}/feed-schedule':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                entity_id:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 54
                entity_type:
                  type: string
                  description: ''
                  example: provident
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 67
                limit:
                  type: integer
                  description: ''
                  example: 14
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magni
        required: true
        schema:
          type: string
  '/api/{ver}/feed-schedule/edit/{id}':
    get:
      summary: ''
      operationId: getApiVerFeedScheduleEditId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facere
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the edit.'
        example: '98647'
        required: true
        schema:
          type: string
  '/api/{ver}/feed-schedule/send-now/{id}':
    post:
      summary: ''
      operationId: postApiVerFeedScheduleSendNowId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the send now.'
        example: '183'
        required: true
        schema:
          type: string
  '/api/{ver}/feed-schedule/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: aut
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 77
                parent_item_id:
                  type: string
                  description: ''
                  example: null
                post_as_parent:
                  type: string
                  description: ''
                  example: null
                user_status:
                  type: string
                  description: ''
                  example: null
                schedule_time:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:39'
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: dolorem
                    lat:
                      type: number
                      description: ''
                      example: 78082035.9
                    lng:
                      type: number
                      description: ''
                      example: 1.0
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 209.584
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 12.87
                      px:
                        type: number
                        description: ''
                        example: 720856.4452892
                      py:
                        type: number
                        description: ''
                        example: 60141320.852684
              required:
                - post_type
                - schedule_time
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: similique
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feed schedule.'
        example: '70'
        required: true
        schema:
          type: string
  '/api/{ver}/feed-schedule/{feed_schedule}/edit':
    get:
      summary: ''
      operationId: getApiVerFeedScheduleFeed_scheduleEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
      -
        in: path
        name: feed_schedule
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/{ver}/feed/allow-preview/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedAllowPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_allowed:
                  type: string
                  description: ''
                  example: esse
              required:
                - is_allowed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the allow preview.'
        example: '2411'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/approve/{id}':
    patch:
      summary: 'Approve pending post.'
      operationId: approvePendingPost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '026'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/archive/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedArchiveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: placeat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the archive.'
        example: '07406'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/check-new':
    get:
      summary: ''
      operationId: getApiVerFeedCheckNew
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                last_feed_id:
                  type: number
                  description: ''
                  example: 34261.789
                last_pin_feed_id:
                  type: number
                  description: ''
                  example: 15371.669415319
                last_sponsored_feed_id:
                  type: number
                  description: ''
                  example: 7.84
                sort:
                  type: string
                  description: ''
                  example: necessitatibus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/{ver}/feed/create':
    get:
      summary: 'hot fix because of /api/v1/feed/create crashed.'
      operationId: hotFixBecauseOfapiv1feedcreateCrashed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/feed/decline/{id}':
    patch:
      summary: ''
      operationId: patchApiVerFeedDeclineId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_block_author:
                  type: string
                  description: ''
                  example: null
                delete_activities:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the decline.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/edit/{id}':
    get:
      summary: 'Get status for edit.'
      operationId: getStatusForEdit
      description: 'GET: feed/edit/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facere
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the edit.'
        example: '25312'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hidden':
    get:
      summary: 'Browse snooze.'
      operationId: browseSnooze
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 29
                limit:
                  type: number
                  description: ''
                  example: 0.0901
                type:
                  type: string
                  description: 'Must be one of <code>friend</code>, <code>page</code>, or <code>group</code>.'
                  example: group
                q:
                  type: string
                  description: ''
                  example: quis
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hidden/{id}':
    delete:
      summary: 'Remove snooze.'
      operationId: removeSnooze
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hidden.'
        example: '1888872'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hide-all/{id}':
    post:
      summary: 'Hide a user.'
      operationId: hideAUser
      description: 'POST: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'UnHide a user.'
      operationId: unHideAUser
      description: 'DELETE: feed/hide-all/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide all.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/hide-feed/{id}':
    post:
      summary: 'Hide a feed.'
      operationId: hideAFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Un-Hide a feed.'
      operationId: unHideAFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dicta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the hide feed.'
        example: '536'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/history/{id}':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Feed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the history.'
        example: '5470396'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/items/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerFeedItemsId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/pin/{id}':
    post:
      summary: 'Pin a feed.'
      operationId: pinAFeed
      description: 'POST: feed/pin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 15
              required:
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/pin/{id}/home':
    post:
      summary: 'Pin a feed.'
      operationId: pinAFeed
      description: 'POST: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Unpin a feed.'
      operationId: unpinAFeed
      description: 'DELETE: feed/pin/{id}/home'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pin.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/post-type':
    get:
      summary: 'Get post types.'
      operationId: getPostTypes
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/feed/privacy/{id}':
    patch:
      summary: 'Update feed privacy.'
      operationId: updateFeedPrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy:
                  type: string
                  description: ''
                  example: nisi
              required:
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '42333'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/share':
    post:
      summary: 'Share feed item.'
      operationId: shareFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_status:
                  type: string
                  description: ''
                  example: dolor
                post_type:
                  type: string
                  description: ''
                  example: fugiat
                item_id:
                  type: number
                  description: ''
                  example: 34188.853
                item_type:
                  type: string
                  description: ''
                  example: ad
                context_item_id:
                  type: number
                  description: ''
                  example: 226.22
                context_item_type:
                  type: string
                  description: ''
                  example: voluptas
                type_id:
                  type: string
                  description: ''
                  example: voluptatem
                post_content:
                  type: string
                  description: ''
                  example: cumque
                parent_feed_id:
                  type: number
                  description: ''
                  example: 102.1083
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: veritatis
                    lat:
                      type: number
                      description: ''
                      example: 2.13181136
                    lng:
                      type: number
                      description: ''
                      example: 547071.24372161
                tagged_friends:
                  type: array
                  description: ''
                  example:
                    - 56.7
                  items:
                    type: number
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 475527.0
                      px:
                        type: number
                        description: ''
                        example: 68.18796
                      py:
                        type: number
                        description: ''
                        example: 9.2814
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odio
        required: true
        schema:
          type: string
  '/api/{ver}/feed/share/form':
    get:
      summary: 'View share form.'
      operationId: viewShareForm
      description: 'GET: feed/share/form'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quod
        required: true
        schema:
          type: string
  '/api/{ver}/feed/snooze/{id}':
    post:
      summary: 'Snooze a user.'
      operationId: snoozeAUser
      description: 'POST: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    delete:
      summary: 'Un-Snooze a user.'
      operationId: unSnoozeAUser
      description: 'DELETE: feed/snooze/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the snooze.'
        example: '283'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/tag/{id}':
    delete:
      summary: 'Remove tag.'
      operationId: removeTag
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the tag.'
        example: '927'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/tagged-friend':
    get:
      summary: 'Get tagged friends.'
      operationId: getTaggedFriends
      description: 'GET: /feed/tagged-friend'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 36
                limit:
                  type: number
                  description: ''
                  example: 45602.4309473
                item_id:
                  type: number
                  description: ''
                  example: 45.50206
                item_type:
                  type: string
                  description: ''
                  example: impedit
                excluded_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
  '/api/{ver}/feed/translate':
    get:
      summary: ''
      operationId: getApiVerFeedTranslate
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: ''
                  example: 8
                target:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ea
        required: true
        schema:
          type: string
  '/api/{ver}/feed/unpin/{id}':
    delete:
      summary: 'Unpin a feed.'
      operationId: unpinAFeed
      description: 'DELETE: feed/unpin/{id}'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 20
              required:
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the unpin.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/feed/{id}':
    get:
      summary: 'View feed item.'
      operationId: viewFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    put:
      summary: 'Update feed item.'
      operationId: updateFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_type:
                  type: string
                  description: ''
                  example: error
                privacy:
                  type: string
                  description: ''
                  example: null
                status_background_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 35
                parent_item_id:
                  type: integer
                  description: ''
                  example: 9
                user_status:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties:
                    address:
                      type: string
                      description: ''
                      example: dolores
                    lat:
                      type: number
                      description: ''
                      example: 345455290.6534
                    lng:
                      type: number
                      description: ''
                      example: 190352914.7922
                tagged_friends:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: string
                tagged_in_photo:
                  type: array
                  description: ''
                  example: null
                  items:
                    type: object
                    properties:
                      friend_id:
                        type: number
                        description: ''
                        example: 26016203.792777
                      px:
                        type: number
                        description: ''
                        example: 1846.147068751
                      py:
                        type: number
                        description: ''
                        example: 18479559.86063
              required:
                - post_type
    delete:
      summary: 'Delete feed item.'
      operationId: deleteFeedItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feed.'
        example: '0588'
        required: true
        schema:
          type: string
  '/api/{ver}/follow':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                view:
                  type: string
                  description: ''
                  example: dolor
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>following</code>.'
                  example: 76563.06952054
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 62
                limit:
                  type: number
                  description: ''
                  example: 556931.095
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 9532.7497
              required:
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nam
        required: true
        schema:
          type: string
  '/api/{ver}/follow/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Follow
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: temporibus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the follow.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/forum':
    get:
      summary: ''
      operationId: getApiVerForum
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 6963324.071
                view:
                  type: string
                  description: ''
                  example: numquam
                forum_id:
                  type: number
                  description: ''
                  example: 73.8
                q:
                  type: string
                  description: ''
                  example: accusamus
                sort:
                  type: string
                  description: ''
                  example: dolor
                sort_thread:
                  type: string
                  description: ''
                  example: delectus
                sort_post:
                  type: string
                  description: ''
                  example: expedita
                sort_type:
                  type: string
                  description: ''
                  example: natus
                when:
                  type: string
                  description: ''
                  example: enim
                item_type:
                  type: string
                  description: ''
                  example: et
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 4
                limit:
                  type: number
                  description: ''
                  example: 9191526.3605
                parent_id:
                  type: number
                  description: ''
                  example: 89.964
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 26061131.605907
                q:
                  type: string
                  description: ''
                  example: ut
                view:
                  type: string
                  description: ''
                  example: nulla
                sort:
                  type: string
                  description: ''
                  example: nisi
                sort_type:
                  type: string
                  description: ''
                  example: et
                when:
                  type: string
                  description: ''
                  example: vero
                thread_id:
                  type: number
                  description: ''
                  example: 312.72
                post_id:
                  type: number
                  description: ''
                  example: 27473.9965103
                forum_id:
                  type: number
                  description: ''
                  example: 39664.34952468
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 23
                limit:
                  type: number
                  description: ''
                  example: 100.353389
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: number
                  description: ''
                  example: 7.470201
                owner_id:
                  type: number
                  description: ''
                  example: 3382396.4002576
                text:
                  type: string
                  description: ''
                  example: qui
                attachments:
                  type: array
                  description: ''
                  example:
                    - non
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - thread_id
                - text
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minima
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumPostApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '096'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumPostFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 99136.5332
                thread_id:
                  type: number
                  description: ''
                  example: 29430.104
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '8'
  '/api/{ver}/forum-post/posters':
    get:
      summary: ''
      operationId: getApiVerForumPostPosters
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                thread_id:
                  type: string
                  description: ''
                  example: voluptatum
              required:
                - thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nam
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/quote':
    post:
      summary: ''
      operationId: postApiVerForumPostQuote
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quote_id:
                  type: number
                  description: ''
                  example: 3049223.87595
                text:
                  type: string
                  description: ''
                  example: debitis
                attachments:
                  type: array
                  description: ''
                  example:
                    - eum
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - quote_id
                - text
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quidem
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/quote/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumPostQuoteFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-post/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
                  description: ''
                  example: error
                attachments:
                  type: array
                  description: ''
                  example:
                    - in
                  items:
                    type: number
                captcha:
                  type: string
                  description: ''
                  example: null
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum post.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-subs/{id}':
    get:
      summary: ''
      operationId: getApiVerForumSubsId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum sub.'
        example: '514'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 7
                user_id:
                  type: number
                  description: ''
                  example: 834.07
                q:
                  type: string
                  description: ''
                  example: doloremque
                view:
                  type: string
                  description: ''
                  example: et
                sort:
                  type: string
                  description: ''
                  example: excepturi
                sort_type:
                  type: string
                  description: ''
                  example: quos
                when:
                  type: string
                  description: ''
                  example: enim
                forum_id:
                  type: number
                  description: ''
                  example: 590342.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 32
                limit:
                  type: number
                  description: ''
                  example: 7862314.0327365
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/close/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadCloseId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_closed:
                  type: string
                  description: ''
                  example: quod
              required:
                - is_closed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the close.'
        example: '75'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/copy':
    post:
      summary: ''
      operationId: postApiVerForumThreadCopy
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 101231211.0
                title:
                  type: string
                  description: 'Must be between  3 and 155 characters.'
                  example: jhgl
                thread_id:
                  type: number
                  description: ''
                  example: 434.95787773
              required:
                - forum_id
                - title
                - thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/copy/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadCopyFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '090'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/last-read/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadLastReadId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                post_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 79
              required:
                - post_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the last read.'
        example: '31'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/merge':
    post:
      summary: ''
      operationId: postApiVerForumThreadMerge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 343018.0711471
                current_thread_id:
                  type: number
                  description: ''
                  example: 4330585.199
                merged_thread_id:
                  type: number
                  description: ''
                  example: 3718159.7223221
              required:
                - forum_id
                - current_thread_id
                - merged_thread_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/merge/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadMergeFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '8294'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/move/form/{id}':
    get:
      summary: ''
      operationId: getApiVerForumThreadMoveFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '390499'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/move/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadMoveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                forum_id:
                  type: number
                  description: ''
                  example: 0.920296
              required:
                - forum_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the move.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor thread in feed.'
      operationId: sponsorThreadInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 5641508.6
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: praesentium
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '5974'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/stick/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadStickId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_sticked:
                  type: string
                  description: ''
                  example: laborum
              required:
                - is_sticked
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the stick.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/subscribe/{id}':
    patch:
      summary: ''
      operationId: patchApiVerForumThreadSubscribeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                is_subscribed:
                  type: string
                  description: ''
                  example: voluptatum
              required:
                - is_subscribed
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscribe.'
        example: '31'
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/suggestion-search':
    get:
      summary: ''
      operationId: getApiVerForumThreadSuggestionSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 13
                user_id:
                  type: number
                  description: ''
                  example: 397915.1
                q:
                  type: string
                  description: ''
                  example: autem
                view:
                  type: string
                  description: ''
                  example: perferendis
                sort:
                  type: string
                  description: ''
                  example: saepe
                sort_type:
                  type: string
                  description: ''
                  example: dolor
                when:
                  type: string
                  description: ''
                  example: voluptas
                forum_id:
                  type: number
                  description: ''
                  example: 2.7047635
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 22
                limit:
                  type: number
                  description: ''
                  example: 507054200.7
                exclude_thread_ids:
                  type: string
                  description: ''
                  example: laudantium
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/forum-thread/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum thread.'
        example: '05'
        required: true
        schema:
          type: string
  '/api/{ver}/forum/option':
    get:
      summary: ''
      operationId: getApiVerForumOption
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 25866.4
                view:
                  type: string
                  description: ''
                  example: quibusdam
                forum_id:
                  type: number
                  description: ''
                  example: 24321.291102786
                q:
                  type: string
                  description: ''
                  example: culpa
                sort:
                  type: string
                  description: ''
                  example: praesentium
                sort_thread:
                  type: string
                  description: ''
                  example: magnam
                sort_post:
                  type: string
                  description: ''
                  example: reprehenderit
                sort_type:
                  type: string
                  description: ''
                  example: nobis
                when:
                  type: string
                  description: ''
                  example: quasi
                item_type:
                  type: string
                  description: ''
                  example: sequi
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 50
                limit:
                  type: number
                  description: ''
                  example: 2541.4
                parent_id:
                  type: number
                  description: ''
                  example: 16.52290182
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/forum/{id}':
    get:
      summary: ''
      operationId: getApiVerForumId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Forum
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ipsum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the forum.'
        example: '3849'
        required: true
        schema:
          type: string
  '/api/{ver}/friend':
    get:
      summary: 'Browse friends.'
      operationId: browseFriends
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: consequatur
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: friend
                sort:
                  type: string
                  description: ''
                  example: inventore
                sort_type:
                  type: string
                  description: ''
                  example: numquam
                when:
                  type: string
                  description: ''
                  example: aut
                list_id:
                  type: number
                  description: ''
                  example: 0.0
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 210007163.36348
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 12
                limit:
                  type: number
                  description: ''
                  example: 531771451.0
                owner_id:
                  type: number
                  description: ''
                  example: 26892.7
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 3169447.4502
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
  '/api/{ver}/friend/birthday':
    get:
      summary: 'Get birthday.'
      operationId: getBirthday
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 32
                month:
                  type: number
                  description: 'Must be at least 1.'
                  example: 82
                view:
                  type: string
                  description: ''
                  example: est
                limit:
                  type: number
                  description: ''
                  example: 64.523573
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
  '/api/{ver}/friend/invite-to-item':
    get:
      summary: ''
      operationId: getApiVerFriendInviteToItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 387791.715
                user_id:
                  type: number
                  description: ''
                  example: 12.39
                item_type:
                  type: string
                  description: ''
                  example: dicta
                item_id:
                  type: number
                  description: ''
                  example: 117.2477
                q:
                  type: string
                  description: ''
                  example: modi
              required:
                - owner_id
                - item_type
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/friend/invite-to-owner':
    get:
      summary: 'Invite friend.'
      operationId: inviteFriend
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: autem
                privacy_type:
                  type: string
                  description: ''
                  example: in
                owner_id:
                  type: number
                  description: ''
                  example: 93.05004
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 5
                limit:
                  type: number
                  description: ''
                  example: 783165518.0
                parent_id:
                  type: number
                  description: ''
                  example: 9454268.0
              required:
                - privacy_type
                - owner_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list':
    get:
      summary: 'Browse friend lists.'
      operationId: browseFriendLists
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 90
                limit:
                  type: number
                  description: ''
                  example: 15.0607
                sort:
                  type: string
                  description: ''
                  example: in
                sort_type:
                  type: string
                  description: ''
                  example: sed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eaque
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/add-friend/{id}':
    post:
      summary: 'Add friend list.'
      operationId: addFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    put:
      summary: ''
      operationId: putApiVerFriendListAddFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/assign/{id}':
    get:
      summary: 'Assign friend to list.'
      operationId: assignFriendToList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    post:
      summary: 'Assign multiple friend to list.'
      operationId: assignMultipleFriendToList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                list_id:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the assign.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/create':
    get:
      summary: ''
      operationId: getApiVerFriendListCreate
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquam
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/{id}':
    get:
      summary: 'View friend list.'
      operationId: viewFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    delete:
      summary: 'Remove friend list.'
      operationId: removeFriendList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quaerat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the list.'
        example: '496'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/list/{list}/edit':
    get:
      summary: ''
      operationId: getApiVerFriendListListEdit
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
      -
        in: path
        name: list
        description: 'The list.'
        example: porro
        required: true
        schema:
          type: string
  '/api/{ver}/friend/mention':
    get:
      summary: 'Load mentions.'
      operationId: loadMentions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: dolorem
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: friend
                sort:
                  type: string
                  description: ''
                  example: provident
                sort_type:
                  type: string
                  description: ''
                  example: est
                when:
                  type: string
                  description: ''
                  example: dolores
                list_id:
                  type: number
                  description: ''
                  example: 0.1901
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 0.352929
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                limit:
                  type: number
                  description: ''
                  example: 52959601.3242
                owner_id:
                  type: number
                  description: ''
                  example: 6289088.1
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 0.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request':
    get:
      summary: 'Browse friend request.'
      operationId: browseFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: provident
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 82
                limit:
                  type: number
                  description: ''
                  example: 4960.19448
    post:
      summary: 'Create friend request.'
      operationId: createFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                friend_user_id:
                  type: number
                  description: ''
                  example: 387.3856461
              required:
                - friend_user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tempore
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request/markAllAsRead':
    post:
      summary: 'Mark all as read.'
      operationId: markAllAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: a
        required: true
        schema:
          type: string
  '/api/{ver}/friend/request/{id}':
    put:
      summary: 'Update friend request.'
      operationId: updateFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: a
              required:
                - action
    delete:
      summary: 'Remove friend request.'
      operationId: removeFriendRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: labore
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the request.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/friend/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerFriendShareSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptates
                view:
                  type: string
                  description: 'Must be one of <code>mutual</code>, <code>latest</code>, <code>friend</code>, <code>profile</code>, or <code>search</code>.'
                  example: friend
                sort:
                  type: string
                  description: ''
                  example: nam
                sort_type:
                  type: string
                  description: ''
                  example: dolore
                when:
                  type: string
                  description: ''
                  example: odit
                list_id:
                  type: number
                  description: ''
                  example: 8.9
                user_id:
                  type: number
                  description: 'This field is required when <code>view</code> is <code>mutual</code> or <code>profile</code>.'
                  example: 259.6349606
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 86
                limit:
                  type: number
                  description: ''
                  example: 2666.0963635
                owner_id:
                  type: number
                  description: ''
                  example: 8562.3071509
                share_on_profile:
                  type: string
                  description: ''
                  example: null
                is_member_only:
                  type: string
                  description: ''
                  example: null
                is_featured:
                  type: number
                  description: ''
                  example: 35278.1769
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eveniet
        required: true
        schema:
          type: string
  '/api/{ver}/friend/suggestion':
    get:
      summary: 'Load suggestion.'
      operationId: loadSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 30
                limit:
                  type: number
                  description: ''
                  example: 1292754.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/{ver}/friend/suggestion/hide':
    post:
      summary: 'Hide user suggestions.'
      operationId: hideUserSuggestions
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 70411033.6
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/friend/tag-suggestion':
    get:
      summary: 'Load friend suggestion for tagging.'
      operationId: loadFriendSuggestionForTagging
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: et
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 54
                limit:
                  type: number
                  description: ''
                  example: 56025254.705047
                item_id:
                  type: number
                  description: ''
                  example: 6868.991
                item_type:
                  type: string
                  description: ''
                  example: ut
                owner_id:
                  type: number
                  description: ''
                  example: 11389948.2
                excluded_ids:
                  type: array
                  description: ''
                  example:
                    - 36.5
                  items:
                    type: number
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
  '/api/{ver}/friend/{id}':
    delete:
      summary: 'Remove friend.'
      operationId: removeFriend
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Friend
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: libero
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the friend.'
        example: '894'
        required: true
        schema:
          type: string
  '/api/{ver}/group':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aut
                view:
                  type: string
                  description: ''
                  example: aut
                sort:
                  type: string
                  description: ''
                  example: quo
                sort_type:
                  type: string
                  description: ''
                  example: fugiat
                when:
                  type: string
                  description: ''
                  example: dolores
                type_id:
                  type: number
                  description: ''
                  example: 445503.0
                category_id:
                  type: number
                  description: ''
                  example: 15915643.782455
                owner_id:
                  type: integer
                  description: ''
                  example: 14
                user_id:
                  type: number
                  description: ''
                  example: 4.3139
                is_featured:
                  type: number
                  description: ''
                  example: 722.937310798
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 5
                limit:
                  type: number
                  description: ''
                  example: 1677117.1305
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: est
                category_id:
                  type: number
                  description: ''
                  example: 383970.448334
                reg_method:
                  type: number
                  description: ''
                  example: 35107.085158391
                text:
                  type: string
                  description: ''
                  example: facere
                users:
                  type: array
                  description: ''
                  example:
                    - dolor
                  items:
                    type: number
              required:
                - name
                - reg_method
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
  '/api/{ver}/group-announcement':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 99.809941
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 39
                limit:
                  type: number
                  description: ''
                  example: 61.0495
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 2.4576
                item_id:
                  type: number
                  description: ''
                  example: 549.45
                item_type:
                  type: string
                  description: ''
                  example: saepe
              required:
                - group_id
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 586.68624109
                item_id:
                  type: number
                  description: ''
                  example: 2445.0
                item_type:
                  type: string
                  description: ''
                  example: ea
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
  '/api/{ver}/group-announcement/hide':
    post:
      summary: ''
      operationId: postApiVerGroupAnnouncementHide
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 35209587.966759
                ann_id:
                  type: number
                  description: ''
                  example: 2843691.09978
              required:
                - group_id
                - ann_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/group-block':
    get:
      summary: 'Browse item'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 79.6
                q:
                  type: string
                  description: ''
                  example: sequi
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 41
                limit:
                  type: number
                  description: ''
                  example: 6.7744
              required:
                - group_id
      security: []
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 955.0
                user_id:
                  type: number
                  description: ''
                  example: 40911.807457
                delete_activities:
                  type: number
                  description: ''
                  example: 36622865.0
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sequi
        required: true
        schema:
          type: string
  '/api/{ver}/group-info/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: aut
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group info.'
        example: '1792715'
        required: true
        schema:
          type: string
  '/api/{ver}/group-integrated/order':
    post:
      summary: 'Reorder example rule.'
      operationId: reorderExampleRule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 1.3289
                names:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: atque
        required: true
        schema:
          type: string
  '/api/{ver}/group-integrated/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group integrated.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/group-invite':
    get:
      summary: 'Browse group invitation.'
      operationId: browseGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 734133.15505
                q:
                  type: string
                  description: ''
                  example: inventore
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 42
                limit:
                  type: number
                  description: ''
                  example: 180.86
              required:
                - group_id
    post:
      summary: 'Store group invitation.'
      operationId: storeGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 509412.9
                user_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - group_id
                - user_ids
    put:
      summary: 'Update group invitation.'
      operationId: updateGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 5243494.6137936
                invite_code:
                  type: string
                  description: ''
                  example: ea
                accept:
                  type: number
                  description: ''
                  example: 4.12663
              required:
                - group_id
                - accept
    delete:
      summary: 'Remove group invitation.'
      operationId: removeGroupInvitation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 5.5915017
                user_id:
                  type: string
                  description: ''
                  example: fuga
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
  '/api/{ver}/group-member':
    get:
      summary: 'Browse group members.'
      operationId: browseGroupMembers
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: vel
                group_id:
                  type: number
                  description: ''
                  example: 251836.91
                view:
                  type: string
                  description: ''
                  example: quo
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 8
                limit:
                  type: number
                  description: ''
                  example: 198477936.8464
                not_invite_role:
                  type: number
                  description: ''
                  example: 25081934.0
                excluded_user_id:
                  type: number
                  description: ''
                  example: 954.0
              required:
                - group_id
    post:
      summary: 'Create group member.'
      operationId: createGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.1764
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/add-group-admin':
    post:
      summary: 'Add group admin.'
      operationId: addGroupAdmin
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 0.91349265
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 1.18522
                  items:
                    type: number
              required:
                - group_id
                - user_ids
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: expedita
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/add-group-moderator':
    post:
      summary: 'Add group moderators.'
      operationId: addGroupModerators
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 13325079.836494
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 2457.5268638
                  items:
                    type: number
              required:
                - group_id
                - user_ids
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/cancel-invite':
    delete:
      summary: ''
      operationId: deleteApiVerGroupMemberCancelInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 41.68
                user_id:
                  type: number
                  description: ''
                  example: 1187.2799
                invite_type:
                  type: string
                  description: ''
                  example: error
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/change-to-moderator':
    put:
      summary: 'Change to moderator.'
      operationId: changeToModerator
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 73717.0
                user_id:
                  type: number
                  description: ''
                  example: 26.98
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/reassign-owner':
    put:
      summary: 'Reassign group owner.'
      operationId: reassignGroupOwner
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 38662.209
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: 1.1086678
                users:
                  type: array
                  description: ''
                  example:
                    - reiciendis
                  items:
                    type: number
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-admin':
    delete:
      summary: 'Remove group admin.'
      operationId: removeGroupAdmin
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 291.34093
                user_id:
                  type: number
                  description: ''
                  example: 4763.051702
                is_delete:
                  type: number
                  description: ''
                  example: 0.6386
              required:
                - group_id
                - user_id
                - is_delete
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-member':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 226.704286945
                user_id:
                  type: number
                  description: ''
                  example: 889759.255
                delete_activities:
                  type: number
                  description: ''
                  example: 60.23693107
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/remove-group-moderator':
    delete:
      summary: 'Remove group moderator.'
      operationId: removeGroupModerator
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 5244.981
                user_id:
                  type: number
                  description: ''
                  example: 801.671
                is_delete:
                  type: number
                  description: ''
                  example: 173427612.5927
              required:
                - group_id
                - user_id
                - is_delete
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/group-member/{id}':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                not_invite_again:
                  type: string
                  description: ''
                  example: null
                reassign_owner_id:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iste
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group member.'
        example: '4681'
        required: true
        schema:
          type: string
  '/api/{ver}/group-mute':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 44661720.925
                user_id:
                  type: number
                  description: ''
                  example: 458076.7273528
              required:
                - group_id
                - user_id
      security: []
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: reprehenderit
                group_id:
                  type: number
                  description: ''
                  example: 25922622.0
                limit:
                  type: number
                  description: ''
                  example: 198551.324
              required:
                - group_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 24653.0
                user_id:
                  type: number
                  description: ''
                  example: 436014.0
                expired_at:
                  type: string
                  description: ''
                  example: eius
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: harum
        required: true
        schema:
          type: string
  '/api/{ver}/group-question':
    get:
      summary: 'Browse Question.'
      operationId: browseQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 23.576453866
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 40
                limit:
                  type: number
                  description: ''
                  example: 19.0
              required:
                - group_id
    post:
      summary: 'Store a question.'
      operationId: storeAQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 73973328.2
                question:
                  type: string
                  description: ''
                  example: quae
                type_id:
                  type: number
                  description: ''
                  example: 25730933.385062
                options:
                  type: array
                  description: 'This field is required unless <code>type_id</code> is in <code>0</code>.'
                  example:
                    - quisquam
                  items:
                    type: string
              required:
                - group_id
                - question
                - type_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
  '/api/{ver}/group-question/answer-form/{id}':
    get:
      summary: 'Get answer form.'
      operationId: getAnswerForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the answer form.'
        example: '9948'
        required: true
        schema:
          type: string
  '/api/{ver}/group-question/form/{id}':
    get:
      summary: 'Get creation form.'
      operationId: getCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 427407.50266959
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '16'
  '/api/{ver}/group-question/{id}':
    put:
      summary: 'Update question.'
      operationId: updateQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                question:
                  type: string
                  description: ''
                  example: molestiae
                type_id:
                  type: number
                  description: ''
                  example: 11291994.067
                options:
                  type: array
                  description: 'This field is required unless <code>type_id</code> is in <code>0</code>.'
                  example:
                    - quia
                  items:
                    type: number
    delete:
      summary: 'Remove question.'
      operationId: removeQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group question.'
        example: '76'
        required: true
        schema:
          type: string
  '/api/{ver}/group-request':
    get:
      summary: 'Browse member requests in a group.'
      operationId: browseMemberRequestsInAGroup
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 30650935.33339
                q:
                  type: string
                  description: ''
                  example: magni
                view:
                  type: string
                  description: ''
                  example: ipsum
                status:
                  type: number
                  description: ''
                  example: 3691.8
                start_date:
                  type: string
                  description: ''
                  example: possimus
                end_date:
                  type: string
                  description: 'Must be a date after <code>start_date</code>.'
                  example: '2119-06-21'
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                limit:
                  type: number
                  description: ''
                  example: 138024535.46111
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/accept-request':
    put:
      summary: 'Accept member request.'
      operationId: acceptMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 3.9689
                user_id:
                  type: number
                  description: ''
                  example: 0.6704529
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/cancel-request/{id}':
    delete:
      summary: 'Cancel a member request.'
      operationId: cancelAMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ab
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel request.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/group-request/deny-request':
    delete:
      summary: 'Deny member request.'
      operationId: denyMemberRequest
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 659791890.42517
                user_id:
                  type: number
                  description: ''
                  example: 5643.23503108
              required:
                - group_id
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule':
    get:
      summary: 'Browse group rules.'
      operationId: browseGroupRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 4381983.8205095
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                limit:
                  type: number
                  description: ''
                  example: 5098.7318
              required:
                - group_id
    post:
      summary: 'Create group rule.'
      operationId: createGroupRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 336.15533
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: qh
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: 'Qui aut optio iusto et cupiditate mollitia.'
              required:
                - group_id
                - title
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule-example':
    get:
      summary: 'Browse example rules.'
      operationId: browseExampleRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/form':
    get:
      summary: 'View creation form.'
      operationId: viewCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 90376316.72
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/form/{id}':
    get:
      summary: 'View update form.'
      operationId: viewUpdateForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '437'
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/order':
    put:
      summary: 'Reorder rules.'
      operationId: reorderRules
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                orders:
                  type: array
                  description: ''
                  example:
                    - 13.5574
                  items:
                    type: number
                group_id:
                  type: number
                  description: ''
                  example: 1343.062198
              required:
                - group_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/group-rule/{id}':
    put:
      summary: 'Update a group rule.'
      operationId: updateAGroupRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 1 and 255 characters.'
                  example: f
                description:
                  type: string
                  description: 'Must be between 1 and 500 characters.'
                  example: 'Sint magnam enim amet libero sint.'
              required:
                - title
    delete:
      summary: 'Remove a rule.'
      operationId: removeARule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group rule.'
        example: '00903'
        required: true
        schema:
          type: string
  '/api/{ver}/group-to-post':
    get:
      summary: ''
      operationId: getApiVerGroupToPost
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: debitis
        required: true
        schema:
          type: string
  '/api/{ver}/group-unblock':
    delete:
      summary: ''
      operationId: deleteApiVerGroupUnblock
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 22546.28813
                user_id:
                  type: number
                  description: ''
                  example: 326943.0
                delete_activities:
                  type: number
                  description: ''
                  example: 1044989.9644
              required:
                - group_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
  '/api/{ver}/group/about-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupAboutSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: animi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '40'
        required: true
        schema:
          type: string
  '/api/{ver}/group/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/group/avatar/{id}':
    post:
      summary: ''
      operationId: postApiVerGroupAvatarId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: aut
              required:
                - image
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '357'
        required: true
        schema:
          type: string
  '/api/{ver}/group/category':
    get:
      summary: 'Browse category.'
      operationId: browseCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 0.688854
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 31
                q:
                  type: string
                  description: ''
                  example: placeat
                level:
                  type: number
                  description: ''
                  example: 2.947207
                limit:
                  type: number
                  description: ''
                  example: 190601720.15414
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: mollitia
        required: true
        schema:
          type: string
  '/api/{ver}/group/confirm-answer-question':
    put:
      summary: ''
      operationId: putApiVerGroupConfirmAnswerQuestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: 9
                is_answer_membership_question:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group_id
                - is_answer_membership_question
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
  '/api/{ver}/group/confirm-rule':
    put:
      summary: ''
      operationId: putApiVerGroupConfirmRule
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: integer
                  description: ''
                  example: 18
                is_rule_confirmation:
                  type: boolean
                  description: ''
                  example: false
              required:
                - group_id
                - is_rule_confirmation
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/group/cover/{id}':
    post:
      summary: ''
      operationId: postApiVerGroupCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 6389.07138556
                position:
                  type: string
                  description: ''
                  example: occaecati
    delete:
      summary: ''
      operationId: deleteApiVerGroupCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '672179'
        required: true
        schema:
          type: string
  '/api/{ver}/group/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '415489'
        required: true
        schema:
          type: string
  '/api/{ver}/group/info-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupInfoSettingId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '59'
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 7.761084
                refresh:
                  type: number
                  description: ''
                  example: 340589257.0
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: praesentium
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code/accept/{code}':
    post:
      summary: ''
      operationId: postApiVerGroupInviteCodeAcceptCode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: dolor
        required: true
        schema:
          type: string
  '/api/{ver}/group/invite-code/verify/{code}':
    get:
      summary: ''
      operationId: getApiVerGroupInviteCodeVerifyCode
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: code
        description: ''
        example: animi
        required: true
        schema:
          type: string
  '/api/{ver}/group/mention':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: autem
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 21
                limit:
                  type: number
                  description: ''
                  example: 27.97230509
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
  '/api/{ver}/group/moderation-right/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupModerationRightId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    put:
      summary: ''
      operationId: putApiVerGroupModerationRightId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the moderation right.'
        example: '51'
        required: true
        schema:
          type: string
  '/api/{ver}/group/pending-mode/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupPendingModeId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                pending_mode:
                  type: number
                  description: ''
                  example: 41.4621895
              required:
                - pending_mode
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pending mode.'
        example: '9589'
        required: true
        schema:
          type: string
  '/api/{ver}/group/privacy/change-request/{id}':
    put:
      summary: ''
      operationId: putApiVerGroupPrivacyChangeRequestId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the change request.'
        example: '22428'
        required: true
        schema:
          type: string
  '/api/{ver}/group/privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerGroupPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    put:
      summary: ''
      operationId: putApiVerGroupPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '57'
        required: true
        schema:
          type: string
  '/api/{ver}/group/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerGroupShareSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                view:
                  type: string
                  description: ''
                  example: impedit
                sort:
                  type: string
                  description: ''
                  example: ut
                sort_type:
                  type: string
                  description: ''
                  example: consectetur
                when:
                  type: string
                  description: ''
                  example: voluptate
                type_id:
                  type: number
                  description: ''
                  example: 215995.17
                category_id:
                  type: number
                  description: ''
                  example: 12.8
                owner_id:
                  type: integer
                  description: ''
                  example: 16
                user_id:
                  type: number
                  description: ''
                  example: 6849.53
                is_featured:
                  type: number
                  description: ''
                  example: 4059.891
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 82
                limit:
                  type: number
                  description: ''
                  example: 3358.86
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
  '/api/{ver}/group/similar':
    get:
      summary: ''
      operationId: getApiVerGroupSimilar
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                group_id:
                  type: number
                  description: ''
                  example: 6016.20084563
                category_id:
                  type: number
                  description: ''
                  example: 45.287
                sort:
                  type: string
                  description: ''
                  example: eaque
                when:
                  type: string
                  description: ''
                  example: ea
                limit:
                  type: number
                  description: ''
                  example: 16129325.97
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/group/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupSponsorInFeedId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 2.35
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ducimus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '98878805'
        required: true
        schema:
          type: string
  '/api/{ver}/group/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerGroupSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: sunt
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '94'
        required: true
        schema:
          type: string
  '/api/{ver}/group/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                invite_code:
                  type: string
                  description: ''
                  example: architecto
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'This field is required when <code>exists</code> is <code>name</code>.'
                  example: praesentium
                category_id:
                  type: number
                  description: ''
                  example: 259562559.0
                reg_method:
                  type: number
                  description: ''
                  example: 9659.31
                vanity_url:
                  type: string
                  description: 'Must not be greater than 100 characters.'
                  example: 'http://ryan.net/deleniti-dolor-vel-unde-nulla'
                landing_page:
                  type: string
                  description: ''
                  example: maiores
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                text_description:
                  type: string
                  description: ''
                  example: quasi
                phone:
                  type: string
                  description: ''
                  example: ipsum
              required:
                - landing_page
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the group.'
        example: '460'
        required: true
        schema:
          type: string
  '/api/{ver}/search-group-member':
    get:
      summary: ''
      operationId: getApiVerSearchGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Group
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: saepe
                group_id:
                  type: number
                  description: ''
                  example: 38640.0
                view:
                  type: string
                  description: ''
                  example: repudiandae
                limit:
                  type: number
                  description: ''
                  example: 6.1
              required:
                - group_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/hashtag':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Hashtags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 42
                limit:
                  type: number
                  description: ''
                  example: 177359.96230382
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/hashtag/suggestion':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Hashtags
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: facere
                limit:
                  type: number
                  description: ''
                  example: 96123.203
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolore
        required: true
        schema:
          type: string
  '/api/{ver}/invite':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitation
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: autem
                status:
                  type: string
                  description: ''
                  example: rerum
                user_id:
                  type: number
                  description: ''
                  example: 1437.6
                view:
                  type: string
                  description: ''
                  example: alias
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 16
                start_date:
                  type: string
                  description: ''
                  example: nobis
                end_date:
                  type: string
                  description: 'Must be a date after <code>start_date</code>.'
                  example: '2038-04-29'
                limit:
                  type: number
                  description: ''
                  example: 4461105.0
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitation
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                recipients:
                  type: array
                  description: ''
                  example:
                    - ipsum
                  items:
                    type: string
                message:
                  type: string
                  description: ''
                  example: aut
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
  '/api/{ver}/invite-code':
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitation
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/invite/batch-delete':
    delete:
      summary: ''
      operationId: deleteApiVerInviteBatchDelete
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitation
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - 1.58
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/invite/batch-resend':
    patch:
      summary: ''
      operationId: patchApiVerInviteBatchResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitation
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  description: ''
                  example:
                    - 6.38270262
                  items:
                    type: number
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/invite/resend/{id}':
    put:
      summary: ''
      operationId: putApiVerInviteResendId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitation
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the resend.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/invite/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Invitation
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the invite.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aliquam
                view:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>my</code>, <code>friend</code>, <code>pending</code>, <code>feature</code>, <code>sponsor</code>, <code>search</code>, <code>my_pending</code>, <code>all_streaming</code>, or <code>my_streaming</code>.'
                  example: my_pending
                sort:
                  type: string
                  description: 'Must be one of <code>recent</code>, <code>most_discussed</code>, <code>most_viewed</code>, <code>most_liked</code>, or <code>latest</code>.'
                  example: latest
                sort_type:
                  type: string
                  description: 'Must be one of <code>desc</code> or <code>asc</code>.'
                  example: asc
                when:
                  type: string
                  description: 'Must be one of <code>all</code>, <code>this_month</code>, <code>this_week</code>, or <code>today</code>.'
                  example: all
                owner_id:
                  type: integer
                  description: ''
                  example: 17
                user_id:
                  type: integer
                  description: ''
                  example: 20
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 87
                limit:
                  type: integer
                  description: ''
                  example: 10
                duration:
                  type: string
                  description: 'Must be one of <code>longer</code> or <code>shorter</code>.'
                  example: shorter
                streaming:
                  type: number
                  description: ''
                  example: 634375175.0
                is_featured:
                  type: number
                  description: ''
                  example: 824580.99915794
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: alias
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                owner_id:
                  type: number
                  description: ''
                  example: 105761.36
                privacy:
                  type: string
                  description: ''
                  example: neque
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: true
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 156.2
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
                to_story:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: necessitatibus
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/approve/{id}':
    patch:
      summary: 'Approve live video.'
      operationId: approveLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/callback/{provider}':
    post:
      summary: ''
      operationId: postApiVerLiveVideoCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/end-live/{id}':
    post:
      summary: ''
      operationId: postApiVerLiveVideoEndLiveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the end live.'
        example: '73'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/feature/{id}':
    patch:
      summary: 'Feature live video.'
      operationId: featureLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/go-live':
    post:
      summary: ''
      operationId: postApiVerLiveVideoGoLive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  description: ''
                  example: null
                stream_key:
                  type: string
                  description: ''
                  example: culpa
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                owner_id:
                  type: number
                  description: ''
                  example: 700542.0
                privacy:
                  type: string
                  description: ''
                  example: non
                text:
                  type: string
                  description: ''
                  example: null
                is_landscape:
                  type: boolean
                  description: ''
                  example: true
                title:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 1313832.3769908
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
                post_to:
                  type: string
                  description: ''
                  example: null
                page_id:
                  type: string
                  description: ''
                  example: null
                group_id:
                  type: string
                  description: ''
                  example: null
                to_story:
                  type: string
                  description: ''
                  example: null
              required:
                - stream_key
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laboriosam
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/off-notification/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoOffNotificationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dicta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the off notification.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/on-notification/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoOnNotificationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quod
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the on notification.'
        example: '91883'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/ping-streaming/{id}':
    get:
      summary: ''
      operationId: getApiVerLiveVideoPingStreamingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ping streaming.'
        example: '0966'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/ping-viewer/{id}':
    get:
      summary: ''
      operationId: getApiVerLiveVideoPingViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ping viewer.'
        example: '801695101'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/remove-viewer/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoRemoveViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: alias
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove viewer.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor live video in feed.'
      operationId: sponsorLiveVideoInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 12.9
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '2908379'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/sponsor/{id}':
    patch:
      summary: 'Sponsor live video.'
      operationId: sponsorLiveVideo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: exercitationem
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '92'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/update-viewer/{id}':
    put:
      summary: ''
      operationId: putApiVerLiveVideoUpdateViewerId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                device_id:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: alias
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the update viewer.'
        example: '821'
        required: true
        schema:
          type: string
  '/api/{ver}/live-video/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                playback_ids:
                  type: object
                  description: ''
                  example: null
                  properties: []
                status:
                  type: string
                  description: ''
                  example: null
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 9355.0
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: officiis
                duration:
                  type: string
                  description: ''
                  example: null
                text:
                  type: string
                  description: ''
                  example: null
                title:
                  type: string
                  description: ''
                  example: null
                privacy:
                  type: string
                  description: ''
                  example: null
                location:
                  type: object
                  description: ''
                  example: null
                  properties: []
                tagged_friends:
                  type: object
                  description: ''
                  example: null
                  properties: []
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Live Video'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the live video.'
        example: '89832'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace':
    get:
      summary: 'Browse listing.'
      operationId: browseListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: nobis
                view:
                  type: string
                  description: ''
                  example: ipsa
                sort:
                  type: string
                  description: ''
                  example: neque
                sort_type:
                  type: string
                  description: ''
                  example: aliquid
                when:
                  type: string
                  description: ''
                  example: eum
                category_id:
                  type: number
                  description: ''
                  example: 243405.32258522
                owner_id:
                  type: integer
                  description: ''
                  example: 19
                user_id:
                  type: number
                  description: ''
                  example: 0.113881495
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 13
                limit:
                  type: number
                  description: ''
                  example: 234.908773
                country_iso:
                  type: string
                  description: ''
                  example: quibusdam
                bounds_west:
                  type: number
                  description: ''
                  example: 1315907.46492
                bounds_east:
                  type: number
                  description: ''
                  example: 83.1754
                bounds_south:
                  type: number
                  description: ''
                  example: 19.5
                bounds_north:
                  type: number
                  description: ''
                  example: 1945337.0
                price_from:
                  type: number
                  description: 'Must be at least 0.'
                  example: 85
                price_to:
                  type: number
                  description: 'Must be at least 0.'
                  example: 43
                is_featured:
                  type: string
                  description: ''
                  example: null
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-category':
    get:
      summary: 'Browe category.'
      operationId: broweCategory
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quidem
                id:
                  type: number
                  description: ''
                  example: 0.0
                level:
                  type: number
                  description: ''
                  example: 0.04
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 51
                limit:
                  type: number
                  description: ''
                  example: 39.333
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: delectus
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invite':
    get:
      summary: ''
      operationId: getApiVerMarketplaceInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    post:
      summary: ''
      operationId: postApiVerMarketplaceInvite
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: 27813.56664
                user_ids:
                  type: array
                  description: 'This field is required when <code>user_ids</code> is present.'
                  example:
                    - 9026780.6953947
                  items:
                    type: number
              required:
                - listing_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invite/invited-people':
    get:
      summary: ''
      operationId: getApiVerMarketplaceInviteInvitedPeople
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                listing_id:
                  type: number
                  description: ''
                  example: 29139.48
                limit:
                  type: number
                  description: ''
                  example: 514750413.6
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 12
              required:
                - listing_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                status:
                  type: string
                  description: ''
                  example: laudantium
                listing_id:
                  type: number
                  description: ''
                  example: 47319.42758
                from:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:41'
                to:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>from</code>.'
                  example: '2120-07-08'
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 46
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: 19
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 203.244022
                payment_gateway:
                  type: number
                  description: ''
                  example: 179456.79137
              required:
                - id
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quibusdam
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/change':
    post:
      summary: ''
      operationId: postApiVerMarketplaceInvoiceChange
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 259702.0
              required:
                - id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: esse
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/repayment/{id}':
    put:
      summary: ''
      operationId: putApiVerMarketplaceInvoiceRepaymentId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 7464958.6295739
                payment_gateway_balance_currency:
                  type: string
                  description: ''
                  example: qui
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: totam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the repayment.'
        example: '86314307'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-invoice/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Marketplace
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quaerat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace invoice.'
        example: '41'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-photo/form/{id}':
    get:
      summary: ''
      operationId: getApiVerMarketplacePhotoFormId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '0899'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace-photo/{id}':
    put:
      summary: ''
      operationId: putApiVerMarketplacePhotoId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                files:
                  type: string
                  description: ''
                  example: aut
              required:
                - files
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace photo.'
        example: '795508'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/approve/{id}':
    put:
      summary: 'Approve listing.'
      operationId: approveListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/feature/{id}':
    patch:
      summary: 'Feature listing.'
      operationId: featureListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '278'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/reopen/{id}':
    patch:
      summary: 'Reopen listing.'
      operationId: reopenListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the reopen.'
        example: '80'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/search-suggestion':
    get:
      summary: ''
      operationId: getApiVerMarketplaceSearchSuggestion
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: null
                listing_id:
                  type: number
                  description: ''
                  example: 37.58176
                q:
                  type: string
                  description: ''
                  example: culpa
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor in feed.'
      operationId: sponsorInFeed
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 46364.92944793
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eveniet
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '3640'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/sponsor/{id}':
    patch:
      summary: 'Sponsor listing.'
      operationId: sponsorListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: vel
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '4332'
        required: true
        schema:
          type: string
  '/api/{ver}/marketplace/{id}':
    get:
      summary: 'View listing.'
      operationId: viewListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    delete:
      summary: 'Remove listing.'
      operationId: removeListing
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Marketplace
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the marketplace.'
        example: '880'
        required: true
        schema:
          type: string
  '/api/{ver}/menu/{menuName}':
    get:
      summary: 'Show Menu.'
      operationId: showMenu
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Menu
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
      -
        in: path
        name: menuName
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/service':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: amet
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth':
    post:
      summary: 'Auth user.'
      operationId: authUser
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: sint
                password:
                  type: string
                  description: ''
                  example: "*ul-Qr'.=$PC@]0i$ce"
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '494488'
              required:
                - service
                - password
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth/form':
    get:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_token:
                  type: string
                  description: ''
                  example: earum
                service:
                  type: string
                  description: ''
                  example: porro
              required:
                - mfa_token
      security: []
    post:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                mfa_token:
                  type: string
                  description: ''
                  example: ipsa
                service:
                  type: string
                  description: ''
                  example: laboriosam
              required:
                - mfa_token
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/auth/resend':
    post:
      summary: ''
      operationId: postApiVerMfaUserAuthResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: placeat
                action:
                  type: string
                  description: ''
                  example: veniam
                password:
                  type: string
                  description: ''
                  example: '%~SQ(o'
              required:
                - service
                - action
                - password
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/activate':
    post:
      summary: 'Activate service.'
      operationId: activateService
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: fugiat
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '683997'
              required:
                - service
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laboriosam
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/setup':
    get:
      summary: 'Setup service form.'
      operationId: setupServiceForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: nisi
                resolution:
                  type: string
                  description: ''
                  example: et
              required:
                - service
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/mfa/user/service/setup/resend':
    post:
      summary: ''
      operationId: postApiVerMfaUserServiceSetupResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Multi-Factor Authentication'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  type: string
                  description: ''
                  example: dolores
                action:
                  type: string
                  description: ''
                  example: dolorem
              required:
                - service
                - action
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: temporibus
        required: true
        schema:
          type: string
  '/api/{ver}/music-genre':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 87920.2203716
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 28
                q:
                  type: string
                  description: ''
                  example: fugit
                level:
                  type: number
                  description: ''
                  example: 52.68993
                limit:
                  type: number
                  description: ''
                  example: 37196676.77
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
  '/api/{ver}/music/album':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptas
                view:
                  type: string
                  description: ''
                  example: ut
                sort:
                  type: string
                  description: ''
                  example: sit
                sort_type:
                  type: string
                  description: ''
                  example: velit
                when:
                  type: string
                  description: ''
                  example: consectetur
                owner_id:
                  type: integer
                  description: ''
                  example: 3
                user_id:
                  type: number
                  description: ''
                  example: 63.9261
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 75
                limit:
                  type: number
                  description: ''
                  example: 634223331.42234
                genre_id:
                  type: number
                  description: ''
                  example: 43153.09
                category_id:
                  type: number
                  description: ''
                  example: 1.14189
                is_featured:
                  type: number
                  description: ''
                  example: 5.283
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: unde
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicAlbumFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vitae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: suscipit
                sort_type:
                  type: string
                  description: ''
                  example: modi
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 66
                limit:
                  type: number
                  description: ''
                  example: 29837178.3443
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: natus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 2.747954
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: modi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '1214'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicAlbumSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: accusamus
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '13'
        required: true
        schema:
          type: string
  '/api/{ver}/music/album/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicAlbumId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the album.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/music/genre':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 3434.14733253
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 89
                q:
                  type: string
                  description: ''
                  example: aliquam
                level:
                  type: number
                  description: ''
                  example: 124.95
                limit:
                  type: number
                  description: ''
                  example: 2208998.0922441
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                view:
                  type: string
                  description: ''
                  example: soluta
                sort:
                  type: string
                  description: ''
                  example: ipsam
                sort_type:
                  type: string
                  description: ''
                  example: eos
                when:
                  type: string
                  description: ''
                  example: id
                user_id:
                  type: number
                  description: ''
                  example: 37.9618129
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 61
                limit:
                  type: number
                  description: ''
                  example: 46635577.964653
                genre_id:
                  type: integer
                  description: ''
                  example: 12
                category_id:
                  type: integer
                  description: ''
                  example: 7
      security: []
    post:
      summary: ''
      operationId: postApiVerMusicPlaylist
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: fugit
                description:
                  type: string
                  description: ''
                  example: 'Numquam sit eaque deserunt nihil ullam.'
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: 23848.2132
                owner_id:
                  type: number
                  description: ''
                  example: 41218609.916286
                privacy:
                  type: string
                  description: ''
                  example: molestiae
                attachments:
                  type: array
                  description: ''
                  example:
                    - quibusdam
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officiis
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/add-song':
    post:
      summary: ''
      operationId: postApiVerMusicPlaylistAddSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 59687.97782785
                playlist_ids:
                  type: array
                  description: ''
                  example:
                    - 618645.0997043
                  items:
                    type: number
              required:
                - item_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ex
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: eveniet
                sort_type:
                  type: string
                  description: ''
                  example: magni
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 49
                limit:
                  type: number
                  description: ''
                  example: 35848.1160315
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/music/playlist/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicPlaylistId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    put:
      summary: 'Update a resource.'
      operationId: updateAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: quia
                description:
                  type: string
                  description: ''
                  example: 'Assumenda aut quis sunt tenetur ut ipsum.'
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 25223698.8219
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: sit
                owner_id:
                  type: number
                  description: ''
                  example: 371.01
                privacy:
                  type: string
                  description: ''
                  example: vel
                attachments:
                  type: array
                  description: ''
                  example:
                    - iure
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the playlist.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/music/search':
    get:
      summary: ''
      operationId: getApiVerMusicSearch
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: mollitia
        required: true
        schema:
          type: string
  '/api/{ver}/music/song':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aut
                view:
                  type: string
                  description: ''
                  example: blanditiis
                sort:
                  type: string
                  description: ''
                  example: vitae
                sort_type:
                  type: string
                  description: ''
                  example: facere
                when:
                  type: string
                  description: ''
                  example: doloribus
                owner_id:
                  type: integer
                  description: ''
                  example: 17
                user_id:
                  type: number
                  description: ''
                  example: 3080982.522
                genre_id:
                  type: number
                  description: ''
                  example: 394978.165
                category_id:
                  type: integer
                  description: ''
                  example: 8
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 56
                limit:
                  type: number
                  description: ''
                  example: 262.6892333
                is_featured:
                  type: number
                  description: ''
                  example: 5574563.67
      security: []
    post:
      summary: ''
      operationId: postApiVerMusicSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: laboriosam
                description:
                  type: string
                  description: ''
                  example: 'Accusamus quia rerum aliquid minima impedit.'
                file:
                  type: string
                  description: ''
                  example: null
                thumbnail:
                  type: string
                  description: ''
                  example: null
                genres:
                  type: array
                  description: 'This field is required when <code>genres</code> is present.'
                  example:
                    - 373.8
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 835568255.0
                privacy:
                  type: string
                  description: ''
                  example: eaque
                attachments:
                  type: array
                  description: ''
                  example:
                    - velit
                  items:
                    type: number
              required:
                - name
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/approve/{id}':
    patch:
      summary: 'Approve song.'
      operationId: approveSong
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ad
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '5'
  '/api/{ver}/music/song/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/sponsor-in-feed/{id}':
    patch:
      summary: 'Sponsor music in feed.'
      operationId: sponsorMusicInFeed
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 5329230.51
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '89'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: sequi
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: alias
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '05'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}/remove-from-playlist/{playlist_id}':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongIdRemoveFromPlaylistPlaylist_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '80'
        required: true
        schema:
          type: string
      -
        in: path
        name: playlist_id
        description: 'The ID of the playlist.'
        example: delectus
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}/statistic/total-play':
    patch:
      summary: ''
      operationId: patchApiVerMusicSongIdStatisticTotalPlay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '007'
        required: true
        schema:
          type: string
  '/api/{ver}/music/song/{id}':
    get:
      summary: ''
      operationId: getApiVerMusicSongId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Music
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the song.'
        example: '6699'
        required: true
        schema:
          type: string
  '/api/{ver}/notification':
    get:
      summary: "Browse current user's notifications."
      operationId: browseCurrentUsersNotifications
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'The page number.'
                  example: 1
                limit:
                  type: integer
                  description: 'The max item per page.'
                  example: 4
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/notification/all':
    delete:
      summary: ''
      operationId: deleteApiVerNotificationAll
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
  '/api/{ver}/notification/markAllAsRead':
    post:
      summary: 'Mark all as read.'
      operationId: markAllAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/notification/setting':
    put:
      summary: 'Update item'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Notification
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/{ver}/notification/setting/form':
    get:
      summary: ''
      operationId: getApiVerNotificationSettingForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Notification
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: saepe
        required: true
        schema:
          type: string
  '/api/{ver}/notification/{id}':
    put:
      summary: 'Mark as read.'
      operationId: markAsRead
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    delete:
      summary: 'Delete notification.'
      operationId: deleteNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Notification
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the notification.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/page':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sed
                view:
                  type: string
                  description: ''
                  example: est
                sort:
                  type: string
                  description: ''
                  example: voluptates
                sort_type:
                  type: string
                  description: ''
                  example: nihil
                when:
                  type: string
                  description: ''
                  example: recusandae
                category_id:
                  type: number
                  description: ''
                  example: 26.6
                owner_id:
                  type: integer
                  description: ''
                  example: 11
                user_id:
                  type: number
                  description: ''
                  example: 37686676.507
                is_featured:
                  type: number
                  description: ''
                  example: 475.0
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 56
                limit:
                  type: number
                  description: ''
                  example: 0.0
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: ''
                  example: enim
                category_id:
                  type: number
                  description: ''
                  example: 3936.82234
                text:
                  type: string
                  description: ''
                  example: voluptas
                users:
                  type: array
                  description: ''
                  example:
                    - modi
                  items:
                    type: number
                external_link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://www.funk.net/voluptas-sunt-delectus-magni-maxime-sit-et'
                image:
                  type: object
                  description: ''
                  example: null
                  properties:
                    base64:
                      type: string
                      description: ''
                      example: cum
              required:
                - name
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/page-admin':
    get:
      summary: 'Display a listing of the admin resource.'
      operationId: displayAListingOfTheAdminResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: sint
                page_id:
                  type: number
                  description: ''
                  example: 311733.6201739
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 60
                limit:
                  type: number
                  description: ''
                  example: 48279028.534673
                view:
                  type: string
                  description: ''
                  example: deserunt
                not_invite_role:
                  type: number
                  description: ''
                  example: 42058.0
                excluded_user_id:
                  type: number
                  description: ''
                  example: 1318465.75119
              required:
                - page_id
      security: []
    post:
      summary: ''
      operationId: postApiVerPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 653.09
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 36509433.406723
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 31.367
                user_id:
                  type: number
                  description: ''
                  example: 8995763.399711
                is_delete:
                  type: number
                  description: ''
                  example: 2049.3
              required:
                - page_id
                - user_id
                - is_delete
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  '/api/{ver}/page-block':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 24.0
                view:
                  type: string
                  description: ''
                  example: commodi
                q:
                  type: string
                  description: ''
                  example: repudiandae
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 7
                limit:
                  type: number
                  description: ''
                  example: 559529.95
              required:
                - page_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 184509.290481
                user_id:
                  type: number
                  description: ''
                  example: 0.0
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: reiciendis
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: aspernatur
                sort:
                  type: string
                  description: ''
                  example: similique
                sort_type:
                  type: string
                  description: ''
                  example: eligendi
                when:
                  type: string
                  description: ''
                  example: tempora
                status:
                  type: string
                  description: ''
                  example: null
                category_id:
                  type: number
                  description: ''
                  example: 3.0
                owner_id:
                  type: integer
                  description: ''
                  example: 4
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 49
                limit:
                  type: number
                  description: ''
                  example: 368599930.61687
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: sed
                page_id:
                  type: number
                  description: ''
                  example: 58.33
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cum
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim/resubmit/{id}':
    put:
      summary: ''
      operationId: putApiVerPageClaimResubmitId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the resubmit.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/page-claim/{id}':
    get:
      summary: ''
      operationId: getApiVerPageClaimId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                  description: ''
                  example: nisi
                status:
                  type: integer
                  description: ''
                  example: 16
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page claim.'
        example: '0576419'
        required: true
        schema:
          type: string
  '/api/{ver}/page-info/{id}':
    get:
      summary: 'Display the specified resource info.'
      operationId: displayTheSpecifiedResourceInfo
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maxime
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page info.'
        example: '4312'
        required: true
        schema:
          type: string
  '/api/{ver}/page-integrated/order':
    post:
      summary: 'Reorder example rule.'
      operationId: reorderExampleRule
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 72791684.2999
                names:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
  '/api/{ver}/page-integrated/{id}':
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page integrated.'
        example: '4'
        required: true
        schema:
          type: string
  '/api/{ver}/page-invite':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: debitis
                page_id:
                  type: number
                  description: ''
                  example: 12.7047
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 34
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 38
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 1436739.46947
                user_ids:
                  type: object
                  description: ''
                  example: []
                  properties: []
              required:
                - page_id
                - user_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/page-invite/{id}':
    put:
      summary: 'Used to accept/decline a request to like a page.'
      operationId: usedToAcceptdeclineARequestToLikeAPage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                accept:
                  type: number
                  description: ''
                  example: 13994764.8
              required:
                - accept
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 4
              required:
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: deleniti
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page invite.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/page-member':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: qui
                page_id:
                  type: number
                  description: ''
                  example: 72.923328
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 83
                limit:
                  type: number
                  description: ''
                  example: 1451.3701374
                view:
                  type: string
                  description: ''
                  example: assumenda
                not_invite_role:
                  type: number
                  description: ''
                  example: 26767.784844108
                excluded_user_id:
                  type: number
                  description: ''
                  example: 4912865.54335
              required:
                - page_id
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 9665601.18
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/add-page-admin':
    post:
      summary: ''
      operationId: postApiVerPageMemberAddPageAdmin
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 81376.15813
                user_ids:
                  type: array
                  description: ''
                  example:
                    - 46.07848
                  items:
                    type: number
              required:
                - page_id
                - user_ids
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/cancel-invite':
    delete:
      summary: ''
      operationId: deleteApiVerPageMemberCancelInvite
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 5.47431
                user_id:
                  type: number
                  description: ''
                  example: 0.1
                invite_type:
                  type: string
                  description: ''
                  example: dignissimos
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/reassign-owner':
    put:
      summary: 'Reassign group owner.'
      operationId: reassignGroupOwner
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 334.07691376
                user_id:
                  type: number
                  description: 'This field is required when <code>users</code> is not present.'
                  example: 5127.969243733
                users:
                  type: array
                  description: ''
                  example:
                    - consequatur
                  items:
                    type: number
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: inventore
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/remove-page-admin':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 218384548.89073
                user_id:
                  type: number
                  description: ''
                  example: 7.299
                is_delete:
                  type: number
                  description: ''
                  example: 11259.027
              required:
                - page_id
                - user_id
                - is_delete
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/remove-page-member':
    delete:
      summary: 'Delete group member.'
      operationId: deleteGroupMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 0.0
                user_id:
                  type: number
                  description: ''
                  example: 0.105
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eaque
        required: true
        schema:
          type: string
  '/api/{ver}/page-member/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: expedita
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page member.'
        example: '22'
        required: true
        schema:
          type: string
  '/api/{ver}/page-to-post':
    get:
      summary: ''
      operationId: getApiVerPageToPost
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nostrum
        required: true
        schema:
          type: string
  '/api/{ver}/page-unblock':
    delete:
      summary: ''
      operationId: deleteApiVerPageUnblock
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 7117133.06
                user_id:
                  type: number
                  description: ''
                  example: 155.872164709
              required:
                - page_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: at
        required: true
        schema:
          type: string
  '/api/{ver}/page/about-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerPageAboutSettingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the about setting.'
        example: '01'
        required: true
        schema:
          type: string
  '/api/{ver}/page/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/page/avatar/{id}':
    post:
      summary: ''
      operationId: postApiVerPageAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                image_crop:
                  type: string
                  description: ''
                  example: tempora
                temp_file:
                  type: number
                  description: ''
                  example: 532942.100331
                photo_id:
                  type: number
                  description: ''
                  example: 10.233427
              required:
                - image_crop
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the avatar.'
        example: '3'
        required: true
        schema:
          type: string
  '/api/{ver}/page/category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 40
                parent_id:
                  type: number
                  description: ''
                  example: 53329.68293
                q:
                  type: string
                  description: ''
                  example: quos
                level:
                  type: number
                  description: ''
                  example: 117.529906991
                limit:
                  type: number
                  description: ''
                  example: 356582.65801
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/page/cover/{id}':
    post:
      summary: ''
      operationId: postApiVerPageCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 488830359.83972
                position:
                  type: string
                  description: ''
                  example: laboriosam
      security: []
    delete:
      summary: ''
      operationId: deleteApiVerPageCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cover.'
        example: '42'
        required: true
        schema:
          type: string
  '/api/{ver}/page/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '648'
        required: true
        schema:
          type: string
  '/api/{ver}/page/info-setting/{id}':
    get:
      summary: ''
      operationId: getApiVerPageInfoSettingId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the info setting.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/page/mention':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: cum
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 13
                limit:
                  type: number
                  description: ''
                  example: 3.012
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/page/privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerPagePrivacyId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    put:
      summary: ''
      operationId: putApiVerPagePrivacyId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the privacy.'
        example: '040'
        required: true
        schema:
          type: string
  '/api/{ver}/page/share-suggestion':
    get:
      summary: ''
      operationId: getApiVerPageShareSuggestion
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: velit
                view:
                  type: string
                  description: ''
                  example: velit
                sort:
                  type: string
                  description: ''
                  example: consequuntur
                sort_type:
                  type: string
                  description: ''
                  example: ad
                when:
                  type: string
                  description: ''
                  example: commodi
                category_id:
                  type: number
                  description: ''
                  example: 17064.0
                owner_id:
                  type: integer
                  description: ''
                  example: 3
                user_id:
                  type: number
                  description: ''
                  example: 918469.551
                is_featured:
                  type: number
                  description: ''
                  example: 3420971.94
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 17
                limit:
                  type: number
                  description: ''
                  example: 0.7292479
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
  '/api/{ver}/page/similar':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page_id:
                  type: number
                  description: ''
                  example: 93.64847
                category_id:
                  type: number
                  description: ''
                  example: 264243.5051
                sort:
                  type: string
                  description: ''
                  example: animi
                when:
                  type: string
                  description: ''
                  example: natus
                limit:
                  type: number
                  description: ''
                  example: 647.1248884
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/page/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPageSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: unde
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '66568'
        required: true
        schema:
          type: string
  '/api/{ver}/page/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '26'
        required: true
        schema:
          type: string
  '/api/{ver}/search-page-member':
    get:
      summary: ''
      operationId: getApiVerSearchPageMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Page
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: nostrum
                page_id:
                  type: number
                  description: ''
                  example: 5.47940104
                view:
                  type: string
                  description: ''
                  example: quidem
                limit:
                  type: number
                  description: ''
                  example: 66247667.861027
              required:
                - page_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: tenetur
        required: true
        schema:
          type: string
  '/api/{ver}/paypal/notify':
    post:
      summary: notify.
      operationId: notify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - PayPal
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 55
                limit:
                  type: number
                  description: ''
                  example: 287464.747615
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration':
    get:
      summary: ''
      operationId: getApiVerPaymentGatewayConfiguration
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: a
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration-form/{driver}/{id}':
    get:
      summary: ''
      operationId: getApiVerPaymentGatewayConfigurationFormDriverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dicta
        required: true
        schema:
          type: string
      -
        in: path
        name: driver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the {driver}.'
        example: '94646'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration-multiple':
    put:
      summary: ''
      operationId: putApiVerPaymentGatewayConfigurationMultiple
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
  '/api/{ver}/payment-gateway/configuration/{id}':
    put:
      summary: ''
      operationId: putApiVerPaymentGatewayConfigurationId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: 13.0
                value:
                  type: object
                  description: ''
                  example: null
                  properties: []
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the configuration.'
        example: '17'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-order':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facere
        required: true
        schema:
          type: string
  '/api/{ver}/payment-order/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Gateway'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                gateway_id:
                  type: number
                  description: ''
                  example: 255472.05957
              required:
                - gateway_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment order.'
        example: '17'
        required: true
        schema:
          type: string
  '/api/{ver}/payment-processor/callback/{processor}':
    post:
      summary: ''
      operationId: postApiVerPaymentProcessorCallbackProcessor
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Payment Processor'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: processor
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/photo':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: integer
                  description: ''
                  example: 15
                user_id:
                  type: number
                  description: ''
                  example: 0.485754401
                category_id:
                  type: number
                  description: ''
                  example: 369609411.69096
                album_id:
                  type: number
                  description: ''
                  example: 96715.8671067
                group_id:
                  type: number
                  description: ''
                  example: 0.72
                q:
                  type: string
                  description: ''
                  example: non
                tag:
                  type: string
                  description: ''
                  example: voluptas
                feed_id:
                  type: number
                  description: ''
                  example: 95498.716301
                view:
                  type: string
                  description: ''
                  example: non
                sort:
                  type: string
                  description: ''
                  example: id
                sort_type:
                  type: string
                  description: ''
                  example: ullam
                when:
                  type: string
                  description: ''
                  example: exercitationem
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 51
                limit:
                  type: number
                  description: ''
                  example: 97242018.751738
                is_featured:
                  type: number
                  description: ''
                  example: 44.37179
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officiis
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: voluptatum
                owner_id:
                  type: integer
                  description: ''
                  example: 16
                user_id:
                  type: number
                  description: ''
                  example: 353098.0
                view:
                  type: string
                  description: ''
                  example: laboriosam
                sort:
                  type: string
                  description: ''
                  example: similique
                sort_type:
                  type: string
                  description: ''
                  example: repudiandae
                when:
                  type: string
                  description: ''
                  example: quia
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 84
                limit:
                  type: number
                  description: ''
                  example: 61756380.793509
                is_featured:
                  type: number
                  description: ''
                  example: 3039.1228
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: enim
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '114120'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/create':
    get:
      summary: ''
      operationId: getApiVerPhotoAlbumCreate
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/items/{id}':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                sort:
                  type: string
                  description: ''
                  example: a
                sort_type:
                  type: string
                  description: ''
                  example: assumenda
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 59
                limit:
                  type: number
                  description: ''
                  example: 2.8483158
                media_id:
                  type: integer
                  description: ''
                  example: 19
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '1858'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoAlbumSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: temporibus
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '2'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: incidunt
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo album.'
        example: '772'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-album/{photo_album}/edit':
    get:
      summary: ''
      operationId: getApiVerPhotoAlbumPhoto_albumEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: photo_album
        description: ''
        example: est
        required: true
        schema:
          type: string
  '/api/{ver}/photo-category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 413.854782167
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 14
                q:
                  type: string
                  description: ''
                  example: alias
                level:
                  type: number
                  description: ''
                  example: 2.699197
                limit:
                  type: number
                  description: ''
                  example: 102376438.97194
                parent_id:
                  type: number
                  description: ''
                  example: 235308.5
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
  '/api/{ver}/photo-set/{id}/items':
    get:
      summary: ''
      operationId: getApiVerPhotoSetIdItems
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                media_id:
                  type: integer
                  description: ''
                  example: 18
                limit:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 20.'
                  example: 14
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 59
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo set.'
        example: '890'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-set/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: doloremque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo set.'
        example: '27'
        required: true
        schema:
          type: string
  '/api/{ver}/photo-tag':
    get:
      summary: ''
      operationId: getApiVerPhotoTag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 1941.6397
              required:
                - item_id
      security: []
    post:
      summary: ''
      operationId: postApiVerPhotoTag
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 13080734.0
                tag_user_id:
                  type: number
                  description: ''
                  example: 46.0
                px:
                  type: number
                  description: 'Must be at least 0.'
                  example: 33
                py:
                  type: number
                  description: 'Must be at least 0.'
                  example: 52
              required:
                - item_id
                - tag_user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
  '/api/{ver}/photo-tag/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerPhotoTagId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: esse
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo tag.'
        example: '815805868'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nemo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/download/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '517'
  '/api/{ver}/photo/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '872054'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/form/{id}':
    get:
      summary: ''
      operationId: getApiVerPhotoFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 5212010.4389489
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptates
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '336'
  '/api/{ver}/photo/parent-avatar/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoParentAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: a
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the parent avatar.'
        example: '375359'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/parent-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoParentCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the parent cover.'
        example: '3059'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/profile-avatar/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoProfileAvatarId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dicta
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the profile avatar.'
        example: '30'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/profile-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerPhotoProfileCoverId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 11
                position:
                  type: string
                  description: ''
                  example: voluptates
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the profile cover.'
        example: '31699'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 8029698.8
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPhotoSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: et
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '46'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the photo.'
        example: '29512'
        required: true
        schema:
          type: string
  '/api/{ver}/photo/{photo}/edit':
    get:
      summary: ''
      operationId: getApiVerPhotoPhotoEdit
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Photo
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: accusamus
        required: true
        schema:
          type: string
      -
        in: path
        name: photo
        description: 'The photo.'
        example: veniam
        required: true
        schema:
          type: string
  '/api/{ver}/poll':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: dolorem
                view:
                  type: string
                  description: ''
                  example: et
                sort:
                  type: string
                  description: ''
                  example: fugit
                sort_type:
                  type: string
                  description: ''
                  example: ea
                when:
                  type: string
                  description: ''
                  example: veritatis
                owner_id:
                  type: integer
                  description: ''
                  example: 16
                user_id:
                  type: number
                  description: ''
                  example: 74329547.366393
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 19
                limit:
                  type: number
                  description: ''
                  example: 22803254.137695
                is_featured:
                  type: number
                  description: ''
                  example: 0.0
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ullam
        required: true
        schema:
          type: string
  '/api/{ver}/poll-result':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'This field is required when <code>answer_id</code> is not present. Must be at least 1.'
                  example: 56
                answer_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 55
                limit:
                  type: number
                  description: ''
                  example: 299698.41417
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 22
                answers:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: []
                  properties: []
              required:
                - poll_id
                - answers
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
  '/api/{ver}/poll-result/{id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                answers:
                  type: object
                  description: 'Must have at least {min, plural, =1 {# item} other {# items}}.'
                  example: null
                  properties: []
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: mollitia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the poll result.'
        example: '220135'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sequi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '515512449'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/integration-form':
    get:
      summary: ''
      operationId: getApiVerPollIntegrationForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                poll_id:
                  type: number
                  description: ''
                  example: 29563546.0
                is_edit:
                  type: string
                  description: ''
                  example: null
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/{ver}/poll/search-form':
    get:
      summary: ''
      operationId: getApiVerPollSearchForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repellat
        required: true
        schema:
          type: string
  '/api/{ver}/poll/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 447132.616
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '2029'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerPollSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: enim
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '43'
        required: true
        schema:
          type: string
  '/api/{ver}/poll/status-form':
    get:
      summary: ''
      operationId: getApiVerPollStatusForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: mollitia
        required: true
        schema:
          type: string
  '/api/{ver}/poll/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Poll
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the poll.'
        example: '06'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: suscipit
                view:
                  type: string
                  description: ''
                  example: ut
                sort:
                  type: string
                  description: ''
                  example: omnis
                sort_type:
                  type: string
                  description: ''
                  example: saepe
                when:
                  type: string
                  description: ''
                  example: ut
                owner_id:
                  type: integer
                  description: ''
                  example: 14
                user_id:
                  type: number
                  description: ''
                  example: 0.8
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 58
                limit:
                  type: number
                  description: ''
                  example: 9.6
                is_featured:
                  type: number
                  description: ''
                  example: 18597.5
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-question/view-plays':
    get:
      summary: ''
      operationId: getApiVerQuizQuestionViewPlays
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                question_id:
                  type: number
                  description: ''
                  example: 83503.8393682
              required:
                - question_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-result':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 73
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 31
                limit:
                  type: number
                  description: ''
                  example: 762004122.37
              required:
                - quiz_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quasi
        required: true
        schema:
          type: string
  '/api/{ver}/quiz-result/view-individual-play':
    get:
      summary: ''
      operationId: getApiVerQuizResultViewIndividualPlay
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                quiz_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 6
                user_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 42
              required:
                - quiz_id
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizApproveId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '90'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizFeatureId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '3793'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/search-form':
    get:
      summary: ''
      operationId: getApiVerQuizSearchForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizSponsorInFeedId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 3397.677339475
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '2609'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerQuizSponsorId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: eveniet
              required:
                - sponsor
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: adipisci
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '017'
        required: true
        schema:
          type: string
  '/api/{ver}/quiz/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Quiz
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: libero
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the quiz.'
        example: '988'
        required: true
        schema:
          type: string
  '/api/{ver}/like':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 63.4548
                item_type:
                  type: string
                  description: ''
                  example: aliquam
              required:
                - item_id
                - item_type
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 412622115.139
                item_type:
                  type: string
                  description: ''
                  example: fugit
                react_id:
                  type: number
                  description: ''
                  example: 9.8548
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 37
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 55
              required:
                - item_id
                - item_type
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 2798998.5502585
                item_type:
                  type: string
                  description: ''
                  example: fuga
                reaction_id:
                  type: number
                  description: ''
                  example: 126915773.63
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
  '/api/{ver}/like-tabs':
    get:
      summary: ''
      operationId: getApiVerLikeTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 27
                item_type:
                  type: string
                  description: ''
                  example: fugiat
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/like/{id}':
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veritatis
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the like.'
        example: '75'
        required: true
        schema:
          type: string
  '/api/{ver}/preaction':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
  '/api/{ver}/preaction/get-reacted-lists':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 49249.065812776
                item_type:
                  type: string
                  description: ''
                  example: sit
                react_id:
                  type: number
                  description: ''
                  example: 498.57759
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 83
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 68
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/{ver}/preaction/reaction-tabs':
    get:
      summary: ''
      operationId: getApiVerPreactionReactionTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 0.'
                  example: 25
                item_type:
                  type: string
                  description: ''
                  example: commodi
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: excepturi
        required: true
        schema:
          type: string
  '/api/{ver}/reaction':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Reactions
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
  '/api/{ver}/report':
    post:
      summary: 'Store a new report.'
      operationId: storeANewReport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: 178417.85386579
                feedback:
                  type: string
                  description: ''
                  example: voluptatem
                item_id:
                  type: number
                  description: ''
                  example: 46.85349
                item_type:
                  type: string
                  description: ''
                  example: et
              required:
                - reason
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner':
    get:
      summary: 'Browse reports.'
      operationId: browseReports
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                owner_id:
                  type: number
                  description: ''
                  example: 1.80240315
                sort_type:
                  type: string
                  description: ''
                  example: quis
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 65
                limit:
                  type: number
                  description: ''
                  example: 118620.48601425
              required:
                - owner_id
    post:
      summary: 'Post a report to owner.'
      operationId: postAReportToOwner
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: number
                  description: ''
                  example: 10256074.4
                feedback:
                  type: string
                  description: ''
                  example: velit
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 47
                item_type:
                  type: string
                  description: ''
                  example: sapiente
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: libero
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/form':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 70
                item_type:
                  type: string
                  description: ''
                  example: voluptatem
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/reporters/{id}':
    get:
      summary: ''
      operationId: getApiVerReportOwnerReportersId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the reporter.'
        example: '85049168'
        required: true
        schema:
          type: string
  '/api/{ver}/report-owner/{id}':
    put:
      summary: 'Update a report.'
      operationId: updateAReport
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                keep_post:
                  type: string
                  description: ''
                  example: sit
              required:
                - keep_post
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the report owner.'
        example: '15'
        required: true
        schema:
          type: string
  '/api/{ver}/report/form':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 20
                item_type:
                  type: string
                  description: ''
                  example: at
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/report/form/mobile':
    get:
      summary: 'Get report form.'
      operationId: getReportForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 8
                item_type:
                  type: string
                  description: ''
                  example: harum
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/report/reason':
    get:
      summary: 'Browse report reasons.'
      operationId: browseReportReasons
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Report
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 13
                limit:
                  type: number
                  description: ''
                  example: 4804.8
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ratione
        required: true
        schema:
          type: string
  '/api/{ver}/seo/meta':
    get:
      summary: ''
      operationId: getApiVerSeoMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    post:
      summary: ''
      operationId: postApiVerSeoMeta
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: possimus
        required: true
        schema:
          type: string
  '/api/{ver}/seo/meta/{metaName}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - SEO
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: assumenda
        required: true
        schema:
          type: string
      -
        in: path
        name: metaName
        description: 'Page meta name.'
        example: blog.browse.home
        required: true
        schema:
          type: string
  '/api/{ver}/sms/notify':
    post:
      summary: notify.
      operationId: notify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'SMS Gateway'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: iure
                collection_id:
                  type: number
                  description: ''
                  example: 583232.3779
                sort_type:
                  type: string
                  description: ''
                  example: voluptas
                open:
                  type: string
                  description: ''
                  example: ut
                when:
                  type: string
                  description: ''
                  example: beatae
                type:
                  type: string
                  description: ''
                  example: aliquid
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 41
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 42
    post:
      summary: 'Create item.'
      operationId: createItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 19943217.9734
                item_type:
                  type: string
                  description: ''
                  example: aliquid
                in_feed:
                  type: number
                  description: ''
                  example: 177781.6
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 35975285.280568
                  items:
                    type: number
              required:
                - item_id
                - item_type
                - in_feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: porro
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection':
    get:
      summary: 'Browse list.'
      operationId: browseList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: 63
                type:
                  type: string
                  description: ''
                  example: ipsum
                saved_id:
                  type: number
                  description: ''
                  example: 862.9989957
    post:
      summary: 'Create list.'
      operationId: createList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: axtihvjetpqhxnvdob
                privacy:
                  type: string
                  description: ''
                  example: ratione
              required:
                - name
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: itaque
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/add-friend/{id}':
    post:
      summary: ''
      operationId: postApiVerSaveditemsCollectionAddFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                users:
                  type: object
                  description: ''
                  example: null
                  properties: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the add friend.'
        example: '9505'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/form':
    get:
      summary: 'View creation form.'
      operationId: viewCreationForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/form/{id}':
    get:
      summary: 'View update form.'
      operationId: viewUpdateForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eos
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the form.'
        example: '55'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/item/{id}':
    get:
      summary: ''
      operationId: getApiVerSaveditemsCollectionItemId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 45
                limit:
                  type: number
                  description: 'Must be at least 5.'
                  example: 16
                type:
                  type: string
                  description: ''
                  example: id
                saved_id:
                  type: number
                  description: ''
                  example: 1776909.04
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: est
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the item.'
        example: '31'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/leave-collection/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionLeaveCollectionId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the leave collection.'
        example: '7965'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/remove-member/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionRemoveMemberId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 827763857.0
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: hic
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the remove member.'
        example: '400274'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/view-friend/{id}':
    get:
      summary: ''
      operationId: getApiVerSaveditemsCollectionViewFriendId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aliquid
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the view friend.'
        example: '540910'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems-collection/{id}':
    get:
      summary: 'View list.'
      operationId: viewList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    put:
      summary: 'Update list.'
      operationId: updateList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 128 characters.'
                  example: fdqosuqnoxzztpa
                privacy:
                  type: string
                  description: ''
                  example: null
              required:
                - name
    delete:
      summary: 'Remove list.'
      operationId: removeList
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the saveditems collection.'
        example: '41'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/collection':
    put:
      summary: 'Move item.'
      operationId: moveItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 3280048.521064
                collection_ids:
                  type: array
                  description: ''
                  example:
                    - 475.9166805
                  items:
                    type: number
              required:
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: recusandae
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/collection/{list_id}/save/{saved_id}':
    delete:
      summary: ''
      operationId: deleteApiVerSaveditemsCollectionList_idSaveSaved_id
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iste
        required: true
        schema:
          type: string
      -
        in: path
        name: list_id
        description: 'The ID of the list.'
        example: omnis
        required: true
        schema:
          type: string
      -
        in: path
        name: saved_id
        description: 'The ID of the saved.'
        example: aliquid
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/get-tab':
    get:
      summary: 'Browse tabs.'
      operationId: browseTabs
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: possimus
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/read/{id}':
    patch:
      summary: 'Mark as opened.'
      operationId: markAsOpened
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                saved_id:
                  type: number
                  description: ''
                  example: 4.86588
                status:
                  type: number
                  description: ''
                  example: 116820768.84304
                collection_id:
                  type: number
                  description: ''
                  example: 969.4
              required:
                - saved_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: non
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the read.'
        example: '1305'
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/save':
    post:
      summary: 'Create item.'
      operationId: createItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 522423.95908
                item_type:
                  type: string
                  description: ''
                  example: non
                in_feed:
                  type: number
                  description: ''
                  example: 704.28
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 54374.4
                  items:
                    type: number
              required:
                - item_id
                - item_type
                - in_feed
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/unsave':
    delete:
      summary: 'Unsave item.'
      operationId: unsaveItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_id:
                  type: number
                  description: ''
                  example: 74.383608
                item_type:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - item_id
                - item_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorum
        required: true
        schema:
          type: string
  '/api/{ver}/saveditems/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                is_unopened:
                  type: number
                  description: ''
                  example: 198.690598795
                saved_list_ids:
                  type: array
                  description: ''
                  example:
                    - 5414.79161193
                  items:
                    type: number
    delete:
      summary: 'Remove item.'
      operationId: removeItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Saved
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the saveditem.'
        example: '92196'
        required: true
        schema:
          type: string
  '/api/{ver}/search':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: ujscggdfvafbxlcasorgaleulgnrfiewsteadvhdzcbtbv
                owner_id:
                  type: number
                  description: ''
                  example: 0.0
                from:
                  type: string
                  description: ''
                  example: similique
                hashtag:
                  type: string
                  description: ''
                  example: laboriosam
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
                limit:
                  type: number
                  description: 'Must be at least 2.'
                  example: 89
                last_search_id:
                  type: number
                  description: 'Must be at least 1.'
                  example: 12
                view:
                  type: string
                  description: ''
                  example: ipsam
              required:
                - q
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/search/group':
    get:
      summary: ''
      operationId: getApiVerSearchGroup
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: qtwqaqivckroguodgsvhmbadsxmwlfcafnobcdstzbfiowbwrkccffqpvozmgoelxbqqqephjjsuzcjkzv
                owner_id:
                  type: number
                  description: ''
                  example: 133.182002041
                from:
                  type: string
                  description: ''
                  example: laborum
                hashtag:
                  type: string
                  description: ''
                  example: vel
                related_comment_friend_only:
                  type: string
                  description: ''
                  example: null
                is_hashtag:
                  type: string
                  description: ''
                  example: null
                when:
                  type: string
                  description: ''
                  example: null
              required:
                - q
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
  '/api/{ver}/search/hashtag/trending':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: integer
                  description: 'Must be at least 1.'
                  example: 44
                limit:
                  type: integer
                  description: ''
                  example: 3
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eveniet
        required: true
        schema:
          type: string
  '/api/{ver}/search/suggestion':
    get:
      summary: 'View Suggestions.'
      operationId: viewSuggestions
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Search
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 15
                q:
                  type: string
                  description: ''
                  example: consequatur
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: saepe
        required: true
        schema:
          type: string
  '/api/{ver}/socialite/callback/{provider}':
    get:
      summary: ''
      operationId: getApiVerSocialiteCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
                  description: ''
                  example: incidunt
                token:
                  type: string
                  description: ''
                  example: tempore
                code_verifier:
                  type: string
                  description: ''
                  example: quasi
                display_name:
                  type: string
                  description: ''
                  example: repudiandae
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/socialite/invite/verify':
    post:
      summary: ''
      operationId: postApiVerSocialiteInviteVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                hash:
                  type: string
                  description: ''
                  example: et
              required:
                - hash
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iusto
        required: true
        schema:
          type: string
  '/api/{ver}/socialite/login/{provider}':
    get:
      summary: ''
      operationId: getApiVerSocialiteLoginProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Social Connect'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                provider:
                  type: string
                  description: ''
                  example: consequatur
              required:
                - provider
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: necessitatibus
        required: true
        schema:
          type: string
  '/api/{ver}/static-page':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cum
        required: true
        schema:
          type: string
  '/api/{ver}/static-page/page/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the page.'
        example: '67635372'
        required: true
        schema:
          type: string
  '/api/{ver}/static-page/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    put:
      summary: 'Update item.'
      operationId: updateItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - 'Static Page'
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: beatae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the static page.'
        example: '1'
        required: true
        schema:
          type: string
  '/api/{ver}/bgs-background':
    get:
      summary: 'Get background.'
      operationId: getBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                collection_id:
                  type: number
                  description: ''
                  example: 1714.96482327
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 26
                limit:
                  type: number
                  description: ''
                  example: 0.1527
              required:
                - collection_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: illum
        required: true
        schema:
          type: string
  '/api/{ver}/pstatusbg-collection':
    get:
      summary: 'Browse collection.'
      operationId: browseCollection
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 51
                limit:
                  type: number
                  description: ''
                  example: 105318946.922
    post:
      summary: 'Create background.'
      operationId: createBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: rnx
                is_active:
                  type: number
                  description: ''
                  example: 480196671.07868
                is_default:
                  type: number
                  description: ''
                  example: 30.97
                background_temp_file:
                  type: array
                  description: ''
                  example:
                    - 109648.8
                  items:
                    type: number
              required:
                - title
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eius
        required: true
        schema:
          type: string
  '/api/{ver}/pstatusbg-collection/{id}':
    get:
      summary: 'View background.'
      operationId: viewBackground
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - 'Status Background'
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the pstatusbg collection.'
        example: '70'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                set_id:
                  type: number
                  description: ''
                  example: 8262196.0759
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 12
                limit:
                  type: number
                  description: ''
                  example: 43.8786617
              required:
                - set_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: pariatur
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/recent':
    get:
      summary: ''
      operationId: getApiVerStickerRecent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 11
                limit:
                  type: number
                  description: ''
                  example: 1225.5
    post:
      summary: ''
      operationId: postApiVerStickerRecent
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sticker_id:
                  type: number
                  description: ''
                  example: 393.625218
              required:
                - sticker_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set':
    get:
      summary: 'Browse sticker.'
      operationId: browseSticker
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                view:
                  type: string
                  description: ''
                  example: autem
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                limit:
                  type: number
                  description: ''
                  example: 50308173.7
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: numquam
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/active/{sticker_set}':
    patch:
      summary: 'Active sticker set.'
      operationId: activeStickerSet
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                active:
                  type: number
                  description: ''
                  example: 231968806.24873
              required:
                - active
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: sticker_set
        description: ''
        example: qui
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/default/{sticker_set}':
    patch:
      summary: ''
      operationId: patchApiVerStickerStickerSetDefaultSticker_set
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: a
        required: true
        schema:
          type: string
      -
        in: path
        name: sticker_set
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/user':
    post:
      summary: ''
      operationId: postApiVerStickerStickerSetUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 4.3
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rerum
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/user/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerStickerStickerSetUserId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: officia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '34'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/sticker-set/{id}':
    get:
      summary: 'View sticker set.'
      operationId: viewStickerSet
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sticker set.'
        example: '8'
        required: true
        schema:
          type: string
  '/api/{ver}/sticker/{id}':
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Sticker
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: veniam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sticker.'
        example: '572'
        required: true
        schema:
          type: string
  '/api/{ver}/story':
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                privacy:
                  type: string
                  description: ''
                  example: dolore
                lifespan:
                  type: integer
                  description: 'Must be at least 1. Must not be greater than 24.'
                  example: 22
                text:
                  type: string
                  description: ''
                  example: at
                font_style:
                  type: string
                  description: ''
                  example: aperiam
                background_id:
                  type: integer
                  description: ''
                  example: 18
                extra:
                  type: object
                  description: ''
                  example: null
                  properties: []
                type:
                  type: string
                  description: ''
                  example: illo
                file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file</code> is present.'
                      example: 416.02561677
                thumb_file:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumb_file</code> is present.'
                      example: 18.84526636
                duration:
                  type: number
                  description: 'Must not be greater than 30.'
                  example: 12
              required:
                - privacy
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: harum
        required: true
        schema:
          type: string
  '/api/{ver}/story-archive':
    get:
      summary: ''
      operationId: getApiVerStoryArchive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: integer
                  description: ''
                  example: 14
                story_id:
                  type: number
                  description: ''
                  example: 7261.9
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 55
                date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:43'
                from_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:43'
                to_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-08-02T08:10:43'
                limit:
                  type: number
                  description: ''
                  example: 92380.20211
      security: []
    post:
      summary: ''
      operationId: postApiVerStoryArchive
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 45225.850135931
              required:
                - story_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: perspiciatis
        required: true
        schema:
          type: string
  '/api/{ver}/story-archive/setting':
    post:
      summary: ''
      operationId: postApiVerStoryArchiveSetting
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
  '/api/{ver}/story-background':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 21
                limit:
                  type: number
                  description: ''
                  example: 5.3
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/{ver}/story-background/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the story background.'
        example: '95'
        required: true
        schema:
          type: string
  '/api/{ver}/story-reaction':
    post:
      summary: 'Store item'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 652679.213276
                reaction_id:
                  type: number
                  description: ''
                  example: 11679897.346
              required:
                - story_id
                - reaction_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
  '/api/{ver}/story-view':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 58.85788733
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 17
                limit:
                  type: number
                  description: ''
                  example: 117983.93334766
              required:
                - story_id
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                story_id:
                  type: number
                  description: ''
                  example: 3030.42858704
              required:
                - story_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: autem
        required: true
        schema:
          type: string
  '/api/{ver}/story/callback/{provider}':
    post:
      summary: ''
      operationId: postApiVerStoryCallbackProvider
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequatur
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: consectetur
        required: true
        schema:
          type: string
  '/api/{ver}/story/{id}':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    delete:
      summary: 'Delete item.'
      operationId: deleteItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the story.'
        example: '31377495'
        required: true
        schema:
          type: string
  '/api/{ver}/user_story':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Story
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                related_user_id:
                  type: integer
                  description: ''
                  example: 13
                user_id:
                  type: integer
                  description: ''
                  example: 12
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 48
                limit:
                  type: number
                  description: ''
                  example: 3850106.889
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nesciunt
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-comparison':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quas
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                limit:
                  type: number
                  description: 'Must be at least 1.'
                  example: 1
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 76
      security: []
    post:
      summary: 'Store item.'
      operationId: storeItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 5.3253
                renew_type:
                  type: string
                  description: ''
                  example: molestiae
                payment_gateway:
                  type: number
                  description: ''
                  example: 54596.92628894
                previous_process_child_id:
                  type: string
                  description: ''
                  example: facilis
                form_name:
                  type: string
                  description: ''
                  example: veritatis
              required:
                - id
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: consequuntur
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/cancel-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoiceCancelFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel form.'
        example: '73'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/cancel/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceCancelId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                reason_id:
                  type: number
                  description: ''
                  example: 50824.710738258
              required:
                - reason_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the cancel.'
        example: '555'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/change-invoice/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoiceChangeInvoiceId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vero
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the change invoice.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/payment-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoicePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: provident
                action_type:
                  type: string
                  description: ''
                  example: dolorum
              required:
                - action_type
      security: []
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoicePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: ea
                action_type:
                  type: string
                  description: ''
                  example: nostrum
              required:
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolor
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionInvoiceRenewFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quae
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '5'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew-method-form/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionInvoiceRenewMethodFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: et
                action_type:
                  type: string
                  description: ''
                  example: voluptate
              required:
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew method form.'
        example: '017786'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/renew/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceRenewId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                payment_gateway:
                  type: number
                  description: ''
                  example: 6616124.044
              required:
                - payment_gateway
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: in
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew.'
        example: '774'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/upgrade/{id}':
    patch:
      summary: ''
      operationId: patchApiVerSubscriptionInvoiceUpgradeId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: null
                payment_gateway:
                  type: number
                  description: ''
                  example: 3536651.1381
                action_type:
                  type: string
                  description: ''
                  example: enim
                previous_process_child_id:
                  type: string
                  description: ''
                  example: aut
                form_name:
                  type: string
                  description: ''
                  example: perferendis
              required:
                - payment_gateway
                - action_type
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the upgrade.'
        example: '6'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-invoice/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscription invoice.'
        example: '9'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package':
    get:
      summary: 'Browse item.'
      operationId: browseItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: mollitia
                view:
                  type: string
                  description: ''
                  example: aspernatur
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/payment-form/{id}':
    get:
      summary: ''
      operationId: getApiVerSubscriptionPackagePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: ut
      security: []
    post:
      summary: ''
      operationId: postApiVerSubscriptionPackagePaymentFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                renew_type:
                  type: string
                  description: ''
                  example: aperiam
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: placeat
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the payment form.'
        example: '24'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/renew-form/{id}':
    post:
      summary: ''
      operationId: postApiVerSubscriptionPackageRenewFormId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: minus
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the renew form.'
        example: '787'
        required: true
        schema:
          type: string
  '/api/{ver}/subscription-package/{id}':
    get:
      summary: 'View item.'
      operationId: viewItem
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Subscription
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the subscription package.'
        example: '0'
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/history/purge/{name}':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetHistoryPurgeName
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: name
        description: ''
        example: nemo
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/history/{name}':
    get:
      summary: ''
      operationId: getApiVerLayoutSnippetHistoryName
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: name
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/ping':
    get:
      summary: ''
      operationId: getApiVerLayoutSnippetPing
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: repudiandae
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/publish':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetPublish
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/purge':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetPurge
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odit
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/revert/{id}':
    post:
      summary: ''
      operationId: postApiVerLayoutSnippetRevertId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the revert.'
        example: '7'
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/theme':
    post:
      summary: 'Store snippet layout.'
      operationId: storeSnippetLayout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: aperiam
                name:
                  type: string
                  description: ''
                  example: saepe
                variant:
                  type: string
                  description: ''
                  example: porro
                files:
                  type: object
                  description: ''
                  example: []
                  properties: []
                active:
                  type: boolean
                  description: ''
                  example: true
              required:
                - theme
                - files
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/layout/snippet/variant':
    post:
      summary: 'Store snippet layout.'
      operationId: storeSnippetLayout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Theme
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                theme:
                  type: string
                  description: ''
                  example: error
                variant:
                  type: string
                  description: ''
                  example: illo
                files:
                  type: object
                  description: ''
                  example: []
                  properties: []
                active:
                  type: boolean
                  description: ''
                  example: true
              required:
                - theme
                - variant
                - files
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nobis
        required: true
        schema:
          type: string
  '/api/{ver}/account/blocked-user':
    get:
      summary: ''
      operationId: getApiVerAccountBlockedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    post:
      summary: ''
      operationId: postApiVerAccountBlockedUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: string
                  description: ''
                  example: sunt
              required:
                - user_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nulla
        required: true
        schema:
          type: string
  '/api/{ver}/account/blocked-user/{id}':
    delete:
      summary: ''
      operationId: deleteApiVerAccountBlockedUserId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: numquam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the blocked user.'
        example: '444'
        required: true
        schema:
          type: string
  '/api/{ver}/account/invisible':
    get:
      summary: ''
      operationId: getApiVerAccountInvisible
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    put:
      summary: ''
      operationId: putApiVerAccountInvisible
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                invisible:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 0
              required:
                - invisible
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptatem
        required: true
        schema:
          type: string
  '/api/{ver}/account/item-privacy':
    put:
      summary: ''
      operationId: putApiVerAccountItemPrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odio
        required: true
        schema:
          type: string
  '/api/{ver}/account/item-privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountItemPrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 20.888192858
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '3691'
  '/api/{ver}/account/notification':
    get:
      summary: ''
      operationId: getApiVerAccountNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                channel:
                  type: string
                  description: ''
                  example: nisi
    put:
      summary: ''
      operationId: putApiVerAccountNotification
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                module_id:
                  type: string
                  description: ''
                  example: fugit
                value:
                  type: integer
                  description: ''
                  example: 8
                var_name:
                  type: string
                  description: ''
                  example: vel
                channel:
                  type: string
                  description: ''
                  example: earum
              required:
                - channel
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: id
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-menu':
    put:
      summary: ''
      operationId: putApiVerAccountProfileMenu
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fugiat
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-menu/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountProfileMenuId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 95416.2
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '45596'
  '/api/{ver}/account/profile-privacy':
    put:
      summary: ''
      operationId: putApiVerAccountProfilePrivacy
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: iure
        required: true
        schema:
          type: string
  '/api/{ver}/account/profile-privacy/{id}':
    get:
      summary: ''
      operationId: getApiVerAccountProfilePrivacyId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 156.941
              required:
                - id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: magni
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '82'
  '/api/{ver}/account/setting':
    get:
      summary: ''
      operationId: getApiVerAccountSetting
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: harum
        required: true
        schema:
          type: string
  '/api/{ver}/account/setting/video':
    get:
      summary: ''
      operationId: getApiVerAccountSettingVideo
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: nihil
        required: true
        schema:
          type: string
  '/api/{ver}/account/setting/video/{id}':
    put:
      summary: ''
      operationId: putApiVerAccountSettingVideoId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laborum
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the video.'
        example: '6481'
        required: true
        schema:
          type: string
  '/api/{ver}/account/timezone':
    get:
      summary: ''
      operationId: getApiVerAccountTimezone
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: corporis
        required: true
        schema:
          type: string
  '/api/{ver}/auth/logout':
    get:
      summary: ''
      operationId: getApiVerAuthLogout
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: animi
        required: true
        schema:
          type: string
  '/api/{ver}/auth/profile':
    get:
      summary: ''
      operationId: getApiVerAuthProfile
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: maiores
        required: true
        schema:
          type: string
  '/api/{ver}/me':
    get:
      summary: 'View current logged in user.'
      operationId: viewCurrentLoggedInUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: repellendus
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: culpa
        required: true
        schema:
          type: string
  '/api/{ver}/register':
    post:
      summary: MetaFox
      operationId: metaFox
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: emmett40@example.org
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: maxime
                password:
                  type: string
                  description: ''
                  example: 'l-[y#3'
                full_name:
                  type: string
                  description: 'Must be at least 3 characters. Must not be greater than 25 characters.'
                  example: ondn
                user_name:
                  type: string
                  description: 'Must be at least 5 characters. Must not be greater than 25 characters.'
                  example: tlmdphyvtmjhrmzrgrhhm
                agree:
                  type: boolean
                  description: 'Must be accepted.'
                  example: true
                captcha:
                  type: string
                  description: ''
                  example: null
                code:
                  type: string
                  description: ''
                  example: perferendis
                invite_code:
                  type: string
                  description: ''
                  example: nostrum
                subscribe_notification:
                  type: boolean
                  description: ''
                  example: true
              required:
                - password
                - full_name
                - user_name
                - agree
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ad
        required: true
        schema:
          type: string
  '/api/{ver}/user':
    get:
      summary: 'Browse user.'
      operationId: browseUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: labore
                view:
                  type: string
                  description: ''
                  example: aut
                gender:
                  type: number
                  description: ''
                  example: 350124.50493
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 29
                limit:
                  type: number
                  description: ''
                  example: 735.2691909
                sort:
                  type: string
                  description: ''
                  example: et
                sort_type:
                  type: string
                  description: ''
                  example: laudantium
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: eapggcaaqpstizytzxsqzydrvtizcydflfuytzczcaq
                country_state_id:
                  type: string
                  description: ''
                  example: esse
                city:
                  type: string
                  description: ''
                  example: null
                city_code:
                  type: string
                  description: ''
                  example: aut
                is_featured:
                  type: number
                  description: ''
                  example: 3980.053547639
                group:
                  type: number
                  description: ''
                  example: 1.330609
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: velit
        required: true
        schema:
          type: string
  '/api/{ver}/user/account':
    get:
      summary: ''
      operationId: getApiVerUserAccount
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vel
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/email-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountEmailForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: doloremque
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eveniet
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/phone-number-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountPhoneNumberForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                resolution:
                  type: string
                  description: ''
                  example: iste
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: rem
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/review-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountReviewForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: vero
        required: true
        schema:
          type: string
  '/api/{ver}/user/account/timezone-form':
    get:
      summary: ''
      operationId: getApiVerUserAccountTimezoneForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
  '/api/{ver}/user/activity':
    get:
      summary: ''
      operationId: getApiVerUserActivity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: provident
        required: true
        schema:
          type: string
  '/api/{ver}/user/avatar/{user}':
    post:
      summary: 'Upload avatar.'
      operationId: uploadAvatar
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                image_crop:
                  type: string
                  description: ''
                  example: temporibus
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 345.480401
                photo_id:
                  type: number
                  description: ''
                  example: 4605091.4
              required:
                - image_crop
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: illo
        required: true
        schema:
          type: string
  '/api/{ver}/user/ban':
    post:
      summary: 'Ban user.'
      operationId: banUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 8.23615
                day:
                  type: number
                  description: 'Must be at least 0.'
                  example: 63
                reason:
                  type: string
                  description: ''
                  example: null
                return_user_group:
                  type: number
                  description: 'Must be at least 1.'
                  example: 68
              required:
                - user_id
                - day
                - return_user_group
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: omnis
        required: true
        schema:
          type: string
  '/api/{ver}/user/ban/{id}':
    delete:
      summary: 'Un-ban user.'
      operationId: unBanUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the ban.'
        example: '259'
        required: true
        schema:
          type: string
  '/api/{ver}/user/city':
    get:
      summary: ''
      operationId: getApiVerUserCity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: quis
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: xglhqhdqubsnmuplkecqogumvdmudnzm
                state:
                  type: string
                  description: ''
                  example: aut
                city_code:
                  type: string
                  description: ''
                  example: minima
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: 1
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dignissimos
        required: true
        schema:
          type: string
  '/api/{ver}/user/country/state':
    get:
      summary: ''
      operationId: getApiVerUserCountryState
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: porro
                country:
                  type: string
                  description: 'Must be at least 2 characters.'
                  example: mclkcslrssmhtqbnuvxvyrzzngnbxxkukhbywsmdpmvfxxwqbocsjchqfqzlpnyxjhrwrovib
                state:
                  type: string
                  description: ''
                  example: numquam
                city_code:
                  type: string
                  description: ''
                  example: recusandae
                limit:
                  type: integer
                  description: 'Must be between 1 and 20.'
                  example: 1
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: impedit
        required: true
        schema:
          type: string
  '/api/{ver}/user/cover/{user}':
    post:
      summary: 'Update cover.'
      operationId: updateCover
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                image:
                  type: string
                  description: ''
                  example: null
                temp_file:
                  type: number
                  description: ''
                  example: 12427.3531
                position:
                  type: string
                  description: ''
                  example: dolorum
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: odit
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
  '/api/{ver}/user/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerUserFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '1'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: explicabo
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '99'
        required: true
        schema:
          type: string
  '/api/{ver}/user/form':
    get:
      summary: 'Get user registration form.'
      operationId: getUserRegistrationForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: harum
        required: true
        schema:
          type: string
  '/api/{ver}/user/info/{user}':
    get:
      summary: ''
      operationId: getApiVerUserInfoUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: molestiae
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: ut
        required: true
        schema:
          type: string
  '/api/{ver}/user/login':
    post:
      summary: /login.
      operationId: login
      description: 'Logged in by email and password.'
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  description: 'The email of user.'
                  example: metafoxtest1@phpfox.com
                password:
                  type: string
                  description: 'The password of user.'
                  example: '12345678'
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - username
                - password
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/edit/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordEditResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
                  description: ''
                  example: odio
                user_id:
                  type: number
                  description: ''
                  example: 948998.96
              required:
                - token
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sint
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: corrupti
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/logout-all':
    patch:
      summary: ''
      operationId: patchApiVerUserPasswordLogoutAll
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 164053.8254047
                token:
                  type: string
                  description: ''
                  example: id
                logout_others:
                  type: string
                  description: ''
                  example: null
              required:
                - user_id
                - token
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: cumque
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/request-method/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordRequestMethodResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: ''
                  example: justus21@example.com
                captcha:
                  type: string
                  description: ''
                  example: null
              required:
                - email
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aperiam
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: nulla
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/request-verify/{resolution}':
    post:
      summary: ''
      operationId: postApiVerUserPasswordRequestVerifyResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                request_method:
                  type: string
                  description: ''
                  example: necessitatibus
                user_id:
                  type: number
                  description: ''
                  example: 12.7903614
              required:
                - request_method
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: ''
        example: occaecati
        required: true
        schema:
          type: string
  '/api/{ver}/user/password/{resolution}':
    patch:
      summary: ''
      operationId: patchApiVerUserPasswordResolution
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: number
                  description: ''
                  example: 7.9736541
                token:
                  type: string
                  description: ''
                  example: voluptatum
                new_password:
                  type: string
                  description: ''
                  example: delectus
                new_password_confirmation:
                  type: string
                  description: 'This field is required when <code>new_password</code> is present.  The value and <code>new_password</code> must match.'
                  example: null
                logout_others:
                  type: string
                  description: ''
                  example: null
              required:
                - user_id
                - token
                - new_password
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: exercitationem
        required: true
        schema:
          type: string
      -
        in: path
        name: resolution
        description: 'Optional parameter.'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: maxime
  '/api/{ver}/user/profile/form':
    get:
      summary: ''
      operationId: getApiVerUserProfileForm
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 37.036959189
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sunt
        required: true
        schema:
          type: string
  '/api/{ver}/user/profile/gender':
    get:
      summary: ''
      operationId: getApiVerUserProfileGender
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: tempora
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 15
                is_custom:
                  type: number
                  description: ''
                  example: 197663738.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: temporibus
        required: true
        schema:
          type: string
  '/api/{ver}/user/quick-preview/{id}':
    get:
      summary: ''
      operationId: getApiVerUserQuickPreviewId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: eligendi
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the quick preview.'
        example: '30'
        required: true
        schema:
          type: string
  '/api/{ver}/user/refresh':
    post:
      summary: ''
      operationId: postApiVerUserRefresh
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refresh_token:
                  type: string
                  description: ''
                  example: numquam
              required:
                - refresh_token
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quas
        required: true
        schema:
          type: string
  '/api/{ver}/user/remove-cover/{id}':
    put:
      summary: ''
      operationId: putApiVerUserRemoveCoverId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quia
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'Optional parameter. The ID of the .'
        required: true
        schema:
          type: string
        examples:
          omitted:
            summary: 'When the value is omitted'
            value: ''
          present:
            summary: 'When the value is present'
            value: '5554'
  '/api/{ver}/user/shortcut':
    get:
      summary: 'Browse shortcuts.'
      operationId: browseShortcuts
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 15
                limit:
                  type: number
                  description: ''
                  example: 5588776.1852
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: suscipit
        required: true
        schema:
          type: string
  '/api/{ver}/user/shortcut/edit':
    get:
      summary: 'View shortcut.'
      operationId: viewShortcut
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: null
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 64
                limit:
                  type: number
                  description: ''
                  example: 2115.0
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: facilis
        required: true
        schema:
          type: string
  '/api/{ver}/user/shortcut/manage/{id}':
    put:
      summary: 'Update shortcut.'
      operationId: updateShortcut
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sort_type:
                  type: string
                  description: ''
                  example: et
              required:
                - sort_type
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the manage.'
        example: '21'
        required: true
        schema:
          type: string
  '/api/{ver}/user/simple/{user}':
    get:
      summary: 'View minimized user information.'
      operationId: viewMinimizedUserInformation
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: laudantium
        required: true
        schema:
          type: string
      -
        in: path
        name: user
        description: ''
        example: illum
        required: true
        schema:
          type: string
  '/api/{ver}/user/validate/identity':
    post:
      summary: ''
      operationId: postApiVerUserValidateIdentity
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when none of <code>user_name</code> and <code>phone_number</code> are present.  Must be a valid email address.'
                  example: antone44@example.net
                phone_number:
                  type: string
                  description: 'This field is required when none of <code>user_name</code> and <code>email</code> are present.'
                  example: ad
                user_name:
                  type: string
                  description: 'This field is required when none of <code>email</code> and <code>phone_number</code> are present.'
                  example: sint
                check_exist:
                  type: number
                  description: ''
                  example: 153625.38136048
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: voluptas
        required: true
        schema:
          type: string
  '/api/{ver}/user/validate/phone-number':
    post:
      summary: ''
      operationId: postApiVerUserValidatePhoneNumber
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                phone_number:
                  type: string
                  description: ''
                  example: necessitatibus
              required:
                - phone_number
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: soluta
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify':
    post:
      summary: ''
      operationId: postApiVerUserVerify
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: quo
                verification_code:
                  type: string
                  description: 'Must match the regex /[0-9]{6}$/.'
                  example: '909241'
              required:
                - action
                - verification_code
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/form':
    get:
      summary: ''
      operationId: getApiVerUserVerifyForm
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: beatae
                user_id:
                  type: number
                  description: ''
                  example: 170220577.57
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: idell.leffler@example.net
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: consequatur
                resolution:
                  type: string
                  description: ''
                  example: ea
              required:
                - action
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aspernatur
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/resend':
    post:
      summary: ''
      operationId: postApiVerUserVerifyResend
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                action:
                  type: string
                  description: ''
                  example: voluptas
                user_id:
                  type: number
                  description: ''
                  example: 2525703.8337563
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: wgottlieb@example.org
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: asperiores
              required:
                - action
                - user_id
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sapiente
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/resendLink':
    post:
      summary: ''
      operationId: postApiVerUserVerifyResendLink
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'This field is required when <code>phone_number</code> is not present.  Must be a valid email address.'
                  example: obrown@example.net
                phone_number:
                  type: string
                  description: 'This field is required when <code>email</code> is not present.'
                  example: dolore
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: asperiores
        required: true
        schema:
          type: string
  '/api/{ver}/user/verify/{hash}':
    post:
      summary: ''
      operationId: postApiVerUserVerifyHash
      description: ''
      parameters: []
      responses: {  }
      tags:
        - User
      security: []
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: et
        required: true
        schema:
          type: string
      -
        in: path
        name: hash
        description: ''
        example: sint
        required: true
        schema:
          type: string
  '/api/{ver}/user/{id}/item-stats':
    get:
      summary: ''
      operationId: getApiVerUserIdItemStats
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                item_type:
                  type: string
                  description: ''
                  example: mollitia
                item_id:
                  type: number
                  description: ''
                  example: 1.83662555
              required:
                - item_type
                - item_id
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: quisquam
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '143'
        required: true
        schema:
          type: string
  '/api/{ver}/user/{id}':
    get:
      summary: 'View user.'
      operationId: viewUser
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - User
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '8980'
        required: true
        schema:
          type: string
  '/api/{ver}/video':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                q:
                  type: string
                  description: ''
                  example: ab
                view:
                  type: string
                  description: ''
                  example: laudantium
                sort:
                  type: string
                  description: ''
                  example: corrupti
                sort_type:
                  type: string
                  description: ''
                  example: tenetur
                when:
                  type: string
                  description: ''
                  example: omnis
                category_id:
                  type: number
                  description: ''
                  example: 1161.0
                owner_id:
                  type: integer
                  description: ''
                  example: 14
                user_id:
                  type: number
                  description: ''
                  example: 1.0676
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 61
                limit:
                  type: number
                  description: ''
                  example: 6774.3406
                is_featured:
                  type: number
                  description: ''
                  example: 17545994.744
    post:
      summary: 'Create a resource.'
      operationId: createAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: reprehenderit
                text:
                  type: string
                  description: ''
                  example: molestiae
                file:
                  type: string
                  description: 'This field is required when <code>video_url</code> is not present.'
                  example: null
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>thumbnail</code> is present.'
                      example: 404.80323125
                video_url:
                  type: string
                  description: 'This field is required when <code>file</code> is not present.  Must be a valid URL.'
                  example: 'http://www.herzog.com/quaerat-inventore-aperiam-ut-sit'
                categories:
                  type: array
                  description: ''
                  example:
                    - 21.0
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 153141546.8
                privacy:
                  type: string
                  description: ''
                  example: corrupti
                is_posted_from_feed:
                  type: number
                  description: ''
                  example: 1514.79
              required:
                - title
                - privacy
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sed
        required: true
        schema:
          type: string
  '/api/{ver}/video/approve/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoApproveId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: qui
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the approve.'
        example: '857'
        required: true
        schema:
          type: string
  '/api/{ver}/video/callback/{provider}':
    post:
      summary: ''
      operationId: postApiVerVideoCallbackProvider
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: blanditiis
        required: true
        schema:
          type: string
      -
        in: path
        name: provider
        description: ''
        example: vitae
        required: true
        schema:
          type: string
  '/api/{ver}/video/category':
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: number
                  description: ''
                  example: 186928.757
                page:
                  type: number
                  description: 'Must be at least 1.'
                  example: 12
                q:
                  type: string
                  description: ''
                  example: et
                level:
                  type: number
                  description: ''
                  example: 39.1
                limit:
                  type: number
                  description: 'Must be at least 10.'
                  example: 46
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: object
                  description: ''
                  example: []
                  properties: []
                name_url:
                  type: string
                  description: 'Must be between 3 and 255 characters.'
                  example: 'http://www.stracke.com/dolorem-itaque-facere-nam'
                is_active:
                  type: number
                  description: 'Must be between 0 and 1.'
                  example: 1
                ordering:
                  type: number
                  description: 'Must be at least 0.'
                  example: 87
                parent_id:
                  type: number
                  description: ''
                  example: 32.541
              required:
                - name
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: fuga
        required: true
        schema:
          type: string
  '/api/{ver}/video/category/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: aut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the category.'
        example: '06979'
        required: true
        schema:
          type: string
  '/api/{ver}/video/feature/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoFeatureId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                feature:
                  type: number
                  description: 'Must be one of <code>0</code> or <code>1</code>.'
                  example: '0'
              required:
                - feature
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolores
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the feature.'
        example: '468222'
        required: true
        schema:
          type: string
  '/api/{ver}/video/fetch':
    post:
      summary: 'View link.'
      operationId: viewLink
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                link:
                  type: string
                  description: 'Must be a valid URL.'
                  example: 'http://prosacco.com/excepturi-voluptate-aut-quo-cum-maxime-explicabo-ex.html'
              required:
                - link
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: sit
        required: true
        schema:
          type: string
  '/api/{ver}/video/sponsor-in-feed/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoSponsorInFeedId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: number
                  description: ''
                  example: 3.86
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: ut
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor in feed.'
        example: '60'
        required: true
        schema:
          type: string
  '/api/{ver}/video/sponsor/{id}':
    patch:
      summary: ''
      operationId: patchApiVerVideoSponsorId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                sponsor:
                  type: string
                  description: ''
                  example: accusantium
              required:
                - sponsor
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: distinctio
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the sponsor.'
        example: '8704'
        required: true
        schema:
          type: string
  '/api/{ver}/video/{id}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    put:
      summary: 'Update a resource.'
      operationId: updateAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: ''
                  example: quos
                text:
                  type: string
                  description: ''
                  example: deleniti
                thumbnail:
                  type: object
                  description: ''
                  example: null
                  properties:
                    temp_file:
                      type: number
                      description: 'This field is required when <code>file.status</code> is <code>update</code>.'
                      example: 1014.608563196
                    status:
                      type: string
                      description: 'This field is required when <code>file</code> is present.'
                      example: dicta
                categories:
                  type: array
                  description: ''
                  example:
                    - 4684.7549
                  items:
                    type: number
                owner_id:
                  type: number
                  description: ''
                  example: 2464.782044
                privacy:
                  type: string
                  description: ''
                  example: debitis
              required:
                - privacy
    delete:
      summary: 'Delete a resource.'
      operationId: deleteAResource
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: 'Bearer {accessToken}'
          schema:
            type: string
      responses: {  }
      tags:
        - Video
    parameters:
      -
        in: path
        name: ver
        description: ''
        example: dolorem
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the video.'
        example: '27'
        required: true
        schema:
          type: string
tags:
  -
    name: 'Activity Point'
    description: "App name: Activity Point\nVersion: 5.1.11\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Advertise
    description: "App name: Advertise\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Announcement
    description: "App name: Announcement\nVersion: 5.0.16\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Attachments
    description: "App name: Attachments\nVersion: 5.0.4\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Authorization
    description: "App name: Authorization\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Blog
    description: "App name: Blog\nVersion: 5.0.17\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: CAPTCHA
    description: "App name: CAPTCHA\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Chat
    description: "App name: Chat\nVersion: 5.0.18\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: ChatPlus
    description: "App name: ChatPlus\nVersion: 5.0.24\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Comment
    description: "App name: Comment\nVersion: 5.0.18\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Contact
    description: "App name: Contact\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Core
    description: "App name: Core\nVersion: 5.1.13\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: E-Wallet
    description: "App name: E-Wallet\nVersion: 5.1.7\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Event
    description: "App name: Event\nVersion: 5.0.18\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Featured
    description: "App name: Featured\nVersion: 5.0.2\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Feed
    description: "App name: Feed\nVersion: 5.0.22\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Follow
    description: "App name: Follow\nVersion: 5.0.11\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Forum
    description: "App name: Forum\nVersion: 5.0.20\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Friend
    description: "App name: Friend\nVersion: 5.0.18\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Group
    description: "App name: Group\nVersion: 5.0.22\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Hashtags
    description: "App name: Hashtags\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Invitation
    description: "App name: Invitation\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: 'Live Video'
    description: "App name: Live Video\nVersion: 5.0.16\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Marketplace
    description: "App name: Marketplace\nVersion: 5.0.25\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Menu
    description: "App name: Menu\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: 'Multi-Factor Authentication'
    description: "App name: Multi-Factor Authentication\nVersion: 5.0.15\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Music
    description: "App name: Music\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Notification
    description: "App name: Notification\nVersion: 5.0.16\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Page
    description: "App name: Page\nVersion: 5.0.22\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: PayPal
    description: "App name: PayPal\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: 'Payment Gateway'
    description: "App name: Payment Gateway\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: 'Payment Processor'
    description: "App name: Payment Processor\nVersion: 5.0.5\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Photo
    description: "App name: Photo\nVersion: 5.0.21\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Poll
    description: "App name: Poll\nVersion: 5.0.19\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Quiz
    description: "App name: Quiz\nVersion: 5.0.18\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Reactions
    description: "App name: Reactions\nVersion: 5.0.16\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Report
    description: "App name: Report\nVersion: 5.0.15\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: SEO
    description: "App name: SEO\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: 'SMS Gateway'
    description: "App name: SMS Gateway\nVersion: 5.0.10\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Saved
    description: "App name: Saved\nVersion: 5.0.18\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Search
    description: "App name: Search\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: 'Social Connect'
    description: "App name: Social Connect\nVersion: 5.0.13\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: 'Static Page'
    description: "App name: Static Page\nVersion: 5.0.12\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: 'Status Background'
    description: "App name: Status Background\nVersion: 5.0.17\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Sticker
    description: "App name: Sticker\nVersion: 5.1.11\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Story
    description: "App name: Story\nVersion: 5.1.10\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Subscription
    description: "App name: Subscription\nVersion: 5.0.18\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Theme
    description: "App name: Theme\nVersion: 5.0.14\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: User
    description: "App name: User\nVersion: 5.1.13\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
  -
    name: Video
    description: "App name: Video\nVersion: 5.0.21\nAuthor: phpFox\nUpdated at: Aug 02, 2024"
components:
  securitySchemes:
    default:
      type: http
      scheme: bearer
      description: ''
security:
  -
    default: []
